Binärdateien /tmp/schily-2019-08-13//.vedtmp.1000 und ./.vedtmp.1000 sind unterschiedlich
Nur in .: AN-2019-09-22
Nur in .: AN-2019-09-99
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//ANNOUNCEMENTS und ./ANNOUNCEMENTS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//DEFAULTS und ./DEFAULTS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//DEFAULTS_CSW und ./DEFAULTS_CSW
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//DEFAULTS_ENG und ./DEFAULTS_ENG
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//READMEs und ./READMEs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//RULES und ./RULES
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//TARGETS und ./TARGETS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//TEMPLATES und ./TEMPLATES
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//autoconf und ./autoconf
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//bins und ./bins
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//bsh und ./bsh
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//btcflash und ./btcflash
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cal und ./cal
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//calc und ./calc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//calltree und ./calltree
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cdda2wav und ./cdda2wav
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cdrecord und ./cdrecord
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//change und ./change
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cmd und ./cmd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//compare und ./compare
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//conf und ./conf
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//copy und ./copy
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//count und ./count
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cpp und ./cpp
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cstyle und ./cstyle
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cut und ./cut
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//doc und ./doc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//hdump und ./hdump
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//inc und ./inc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//include und ./include
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//incs und ./incs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//isaexec und ./isaexec
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//label und ./label
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//lib und ./lib
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libboshcmd und ./libboshcmd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libcdrdeflt und ./libcdrdeflt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libdbgmalloc und ./libdbgmalloc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libdeflt und ./libdeflt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libedc und ./libedc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libfile und ./libfile
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libfind und ./libfind
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libgetopt und ./libgetopt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libhfs_iso und ./libhfs_iso
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libmdigest und ./libmdigest
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libparanoia und ./libparanoia
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//librmt und ./librmt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//librscg und ./librscg
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libs und ./libs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libscg und ./libscg
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libscgcmd und ./libscgcmd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libschily und ./libschily
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libshedit und ./libshedit
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libsiconv und ./libsiconv
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libstreamar und ./libstreamar
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libvms und ./libvms
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libxtermcap und ./libxtermcap
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//lndir und ./lndir
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//man und ./man
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//man2html und ./man2html
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//match und ./match
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//mdigest und ./mdigest
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//mkisofs und ./mkisofs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//mountcd und ./mountcd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//mt und ./mt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//obosh und ./obosh
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//p und ./p
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//packages und ./packages
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//paste und ./paste
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//patch und ./patch
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pbosh und ./pbosh
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs und ./pkgdefs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//printf und ./printf
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//proto und ./proto
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//psmake und ./psmake
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pxupgrade und ./pxupgrade
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//readcd und ./readcd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//rmt und ./rmt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//rscsi und ./rscsi
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs und ./sccs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//scgcheck und ./scgcheck
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//scgskeleton und ./scgskeleton
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sdd und ./sdd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sfind und ./sfind
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sformat und ./sformat
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sgrow und ./sgrow
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh und ./sh
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//smake und ./smake
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star und ./star
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star_sym und ./star_sym
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//strar und ./strar
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro und ./sunpro
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//tartest und ./tartest
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//termcap und ./termcap
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//tests und ./tests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//translit und ./translit
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//udiff und ./udiff
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//ved und ./ved
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//vms und ./vms
Nur in ./DEFAULTS: Defaults.ultrix
Nur in ./DEFAULTS_ENG: Defaults.ultrix
diff -r /tmp/schily-2019-08-13//RULES/local.cnf ./RULES/local.cnf
1c1
< #ident @(#)local.cnf	1.13 18/08/16 
---
> #ident @(#)local.cnf	1.14 19/09/07 
3c3
< # Written 1998-2014 by J. Schilling
---
> # Written 1998-2019 by J. Schilling
44c44,45
< 		LDFLAGS="$(LDOPTS)" sh $(INVERSE_SUBARCHDIR)../../configure $(CONFFLAGS)
---
> 		LDFLAGS="$(LDOPTS)" CONFIG_SHELL=$(SHELL) \
> 		$(SHELL) $(INVERSE_SUBARCHDIR)../../configure $(CONFFLAGS)
Nur in ./RULES: os-ultrix.def
Nur in ./RULES: os-ultrix.id
diff -r /tmp/schily-2019-08-13//RULES/profiled.lnk ./RULES/profiled.lnk
16a17,18
> # A copy of the CDDL is also available via the Internet at
> # http://www.opensource.org/licenses/cddl1.txt
diff -r /tmp/schily-2019-08-13//RULES/r-gmake.dep ./RULES/r-gmake.dep
1c1
< #ident "@(#)r-gmake.dep	1.17 18/08/16 "
---
> #ident "@(#)r-gmake.dep	1.18 19/09/14 "
3c3
< # Written 1996 by J. Schilling
---
> # Written 1996-2019 by J. Schilling
86a87,88
> 	else						\
> 		: work around v7 shell bug;		\
diff -r /tmp/schily-2019-08-13//RULES/r-make.dep ./RULES/r-make.dep
1c1
< #ident "@(#)r-make.dep	1.11 18/08/16 "
---
> #ident "@(#)r-make.dep	1.12 19/09/14 "
3c3
< # Written 1996 by J. Schilling
---
> # Written 1996-2019 by J. Schilling
78a79,80
> 	else						\
> 		: work around v7 shell bug;		\
diff -r /tmp/schily-2019-08-13//RULES/r-smake.dep ./RULES/r-smake.dep
1c1
< #ident "@(#)r-smake.dep	2.2 18/08/16 "
---
> #ident "@(#)r-smake.dep	2.3 19/09/14 "
3c3
< # Written 1996 by J. Schilling
---
> # Written 1996-2019 by J. Schilling
92a93,94
> 	else						\
> 		: work around v7 shell bug;		\
diff -r /tmp/schily-2019-08-13//RULES/r-sunpro.dep ./RULES/r-sunpro.dep
1c1
< #ident "@(#)r-sunpro.dep	1.18 18/08/16 "
---
> #ident "@(#)r-sunpro.dep	1.19 19/09/14 "
3c3
< # Written 1996-2017 by J. Schilling
---
> # Written 1996-2019 by J. Schilling
86a87,88
> 	else						\
> 		: work around v7 shell bug;		\
Nur in ./RULES: risc-ultrix-gcc.rul
diff -r /tmp/schily-2019-08-13//RULES/rules.cnf ./RULES/rules.cnf
1c1
< #ident @(#)rules.cnf	1.18 18/08/16 
---
> #ident @(#)rules.cnf	1.19 19/09/07 
3c3
< # Written 1998-2013 by J. Schilling
---
> # Written 1998-2019 by J. Schilling
68c68,69
< 		LDFLAGS="$(LDOPTS)" sh ../../autoconf/configure $(CONFFLAGS)
---
> 		LDFLAGS="$(LDOPTS)" CONFIG_SHELL=$(SHELL) \
> 		$(SHELL) ../../autoconf/configure $(CONFFLAGS)
diff -r /tmp/schily-2019-08-13//RULES/rules.ins ./RULES/rules.ins
1c1
< #ident @(#)rules.ins	1.30 19/07/20 
---
> #ident @(#)rules.ins	1.31 19/09/14 
3c3
< # Written 1996-2018 by J. Schilling
---
> # Written 1996-2019 by J. Schilling
68c68,69
< 				fi					\
---
> 				fi;					\
> 				:;					\
71a73,74
> 	else								\
> 		: work around v7 shell bug;				\
84c87,88
< 				fi					\
---
> 				fi;					\
> 				:;					\
87a92,93
> 	else								\
> 		: work around v7 shell bug;				\
100c106,107
< 				fi					\
---
> 				fi;					\
> 				:;					\
103a111,112
> 	else								\
> 		: work around v7 shell bug;				\
diff -r /tmp/schily-2019-08-13//RULES/rules1.top ./RULES/rules1.top
1c1
< #ident "@(#)rules1.top	1.59 19/07/20 "
---
> #ident "@(#)rules1.top	1.60 19/09/14 "
3c3
< # Written 1996-2018 by J. Schilling
---
> # Written 1996-2019 by J. Schilling
278a279,280
> 	else			\
> 		: work around v7 shell bug; \
diff -r /tmp/schily-2019-08-13//RULES/sub.htm ./RULES/sub.htm
1c1
< #ident "@(#)sub.htm	1.6 19/07/20 "
---
> #ident "@(#)sub.htm	1.7 19/09/14 "
3c3
< # Written 2007 by J. Schilling
---
> # Written 2007-2019 by J. Schilling
34c34,35
< 				fi					\
---
> 				fi;					\
> 				:;					\
37a39,40
> 	else								\
> 		: work around v7 shell bug;				\
diff -r /tmp/schily-2019-08-13//TEMPLATES/temp-clang.rul ./TEMPLATES/temp-clang.rul
1c1
< #ident "@(#)temp-clang.rul	1.2 14/03/31 "
---
> #ident "@(#)temp-clang.rul	1.3 19/09/08 "
3c3
< # Written 1997-2014 by J. Schilling
---
> # Written 1997-2019 by J. Schilling
31c31
< SHL_SUFFIX=	.so.1.0
---
> SHL_SUFFIX=	.so.$(DYNMAJOR).$(DYNMINOR)
47a48
> _MKDIR=		$(_MKDIR_SH)
48a50
> INSMKDIR=	$(INSMKDIR_SH)
diff -r /tmp/schily-2019-08-13//TEMPLATES/temp-gcc.rul ./TEMPLATES/temp-gcc.rul
1c1
< #ident "@(#)temp-gcc.rul	1.4 14/03/31 "
---
> #ident "@(#)temp-gcc.rul	1.5 19/09/08 "
3c3
< # Written 1997 by J. Schilling
---
> # Written 1997-2019 by J. Schilling
31c31
< SHL_SUFFIX=	.so.1.0
---
> SHL_SUFFIX=	.so.$(DYNMAJOR).$(DYNMINOR)
47a48
> _MKDIR=		$(_MKDIR_SH)
48a50
> INSMKDIR=	$(INSMKDIR_SH)
diff -r /tmp/schily-2019-08-13//TEMPLATES/temp-xcc.rul ./TEMPLATES/temp-xcc.rul
1c1
< #ident "@(#)temp-xcc.rul	1.3 09/07/26 "
---
> #ident "@(#)temp-xcc.rul	1.4 19/09/08 "
3c3
< # Written 1997 by J. Schilling
---
> # Written 1997-2019 by J. Schilling
16a17,18
> # A copy of the CDDL is also available via the Internet at
> # http://www.opensource.org/licenses/cddl1.txt
39a42,45
> 
> _MKDIR=		$(_MKDIR_SH)
> MKDIR=		$(MKDIR_SH)
> INSMKDIR=	$(INSMKDIR_SH)
diff -r /tmp/schily-2019-08-13//autoconf/acgeneral.m4 ./autoconf/acgeneral.m4
1c1
< dnl @(#)acgeneral.m4	1.17 16/03/22 Copyright 1998-2016 J. Schilling
---
> dnl @(#)acgeneral.m4	1.19 19/09/06 Copyright 1998-2019 J. Schilling
58c58
< define(AC_ACVERSION_SCHILY, 1.17-Schily)
---
> define(AC_ACVERSION_SCHILY, 1.19-Schily)
154c154
< # Copyright (C) 1998-2016 J. Schilling
---
> # Copyright (C) 1998-2019 J. Schilling
1218c1218
< [eval echo "$ac_t""$1" 1>&AC_FD_MSG])
---
> [echo "$ac_t""$1" 1>&AC_FD_MSG])
1313a1314,1318
> dnl If we however like to support the original UNIX V7 shell, this will not
> dnl work since shells older than 1984 do not support I/O redirection for
> dnl builtin commands. The V7 shell however still works with { eval echo ;}
> dnl so we now use { ;} instead of ( ), support the V7 shell and are still fast.
> dnl
1316,1317c1321,1322
< [{ eval echo configure:__oline__: \"[$]$1\" 1>&AC_FD_CC; dnl
< eval [$]$1 2>&AC_FD_CC; }])
---
> [{ { eval echo configure:__oline__: \"[$]$1\" ;} 1>&AC_FD_CC; dnl
> { eval [$]$1 ;} 2>&AC_FD_CC; }])
diff -r /tmp/schily-2019-08-13//autoconf/aclocal.m4 ./autoconf/aclocal.m4
1c1
< dnl @(#)aclocal.m4	1.110 18/08/08 Copyright 1998-2018 J. Schilling
---
> dnl @(#)aclocal.m4	1.114 19/09/26 Copyright 1998-2019 J. Schilling
58a59,63
> dnl We need this macro, as we cannot use parameterized macros with AC_REQUIRE
> AC_DEFUN(AC_PATH_CC,
> [AC_PATH_PROG(ac_path_cc, ${CC-cc})]
> )
> 
60a66
> AC_REQUIRE([AC_PATH_CC])dnl
64,65c70,72
< [  # This must be in double quotes, not single quotes, because CPP may get
<   # substituted into the Makefile and "${CC-cc}" will confuse make.
---
> [
>   # This must be in double quotes, not single quotes, because CPP may get
>   # substituted in the Makefile and "${CC-cc}" will confuse make.
78c85,87
< 		ac_file=`eval type ${CC-cc} 2>/dev/null | sed 's%[^/]*/%/%'`
---
> 		# Cannot use type(1) here as this should work with a V7 shell
> 		# So we use the result from AC_PATH_PROG
> 		ac_file="$ac_path_cc"
87c96,97
< 			ac_result=`(echo configure:__oline__: "$CPPX - < conftestcpp | grep xxzzy" 1>&5; eval $CPPX - < conftestcpp | grep xxzzy) 2>&5`
---
> 			# WARNING: eval needs a subshell for the V7 shell
> 			ac_result=`(echo configure:__oline__: "$CPPX - < conftestcpp | grep xxzzy" 1>&5; (eval $CPPX -) < conftestcpp | grep xxzzy) 2>&5`
224c234
< 	ac_err=`< /dev/null eval $sun_cc64 -m64 -c 2>&1 | grep illegal`
---
> 	ac_err=`(eval $sun_cc64 -m64 -c) < /dev/null 2>&1 | grep illegal`
247c257
< 		ac_err=`< /dev/null eval $hp_cc -Ae -c 2>&1 | grep 'Bundled.*option is available only'`
---
> 		ac_err=`(eval $hp_cc -Ae -c) < /dev/null 2>&1 | grep 'Bundled.*option is available only'`
271c281
< 		ac_err=`< /dev/null eval $hp_cc -O -c 2>&1 | grep 'Bundled.*option is available only'`
---
> 		ac_err=`(eval $hp_cc -O -c) < /dev/null 2>&1 | grep 'Bundled.*option is available only'`
295c305
< 		ac_err=`< /dev/null eval $hp_cc -O -c 2>&1 | grep 'Bundled.*option is available only'`
---
> 		ac_err=`(eval $hp_cc -O -c) < /dev/null 2>&1 | grep 'Bundled.*option is available only'`
337c347,348
< [AC_CACHE_CHECK([if $2 is defined or function], ["ac_cv_have_$2"],
---
> [AC_MSG_CHECKING([if $2 is defined or function]) 
> AC_CACHE_VAL(ac_cv_have_$2, 
345a357,361
> if eval "test \"`echo '$ac_cv_have_'$2`\" = yes"; then
> 	AC_MSG_RESULT(yes)
> else
> 	AC_MSG_RESULT(no)
> fi
1058c1074,1075
< [AC_REQUIRE([AC_HEADER__FILBUF])AC_REQUIRE([AC_HEADER___FILBUF])dnl
---
> [AC_REQUIRE([AC_HEADER__FILBUF])dnl
> AC_REQUIRE([AC_HEADER___FILBUF])dnl
diff -r /tmp/schily-2019-08-13//autoconf/xconfig.h.in ./autoconf/xconfig.h.in
1c1
< /* @(#)xconfig.h.in	1.276 19/05/15 Copyright 1998-2019 J. Schilling */
---
> /* @(#)xconfig.h.in	1.277 19/09/05 Copyright 1998-2019 J. Schilling */
956a957,965
> #ifndef	NEED_INTTYPES
> #define	NO_INTTYPES
> #endif
> #if	defined(ultrix)		/* Ultrix has these types somewhere else */
> #ifndef	NO_INTTYPES		/* so we cannot define them here	*/
> #define	NO_INTTYPES
> #endif
> #endif
> #ifndef	NO_INTTYPES
970a980
> #endif	/* NO_INTTYPES */
Nur in ./bsh: dotfiles.bsh.tar.bz2
Nur in /tmp/schily-2019-08-13//bsh: dotfiles.tar.bz2
diff -r /tmp/schily-2019-08-13//bsh/test.c ./bsh/test.c
1c1
< /* @(#)test.c	1.40 18/07/15 Copyright 1986,1995-2018 J. Schilling */
---
> /* @(#)test.c	1.41 19/09/16 Copyright 1986,1995-2019 J. Schilling */
5c5
< 	"@(#)test.c	1.40 18/07/15 Copyright 1986,1995-2018 J. Schilling";
---
> 	"@(#)test.c	1.41 19/09/16 Copyright 1986,1995-2019 J. Schilling";
10c10
<  *	Copyright (c) 1986,1995-2018 J. Schilling
---
>  *	Copyright (c) 1986,1995-2019 J. Schilling
328c328
< #ifdef	S_IFPORT
---
> #if defined(S_IFPORT) && S_IFPORT != S_IFIFO	/* Do not use it on Ultrix */
diff -r /tmp/schily-2019-08-13//bsh/version.c ./bsh/version.c
3c3
< char dVERSION[] = "2018/10/07";
---
> char dVERSION[] = "2019/08/28";
5c5
< /* @(#)version.c	1.31 18/10/07 Copyright 1985-2015 J. Schilling */
---
> /* @(#)version.c	1.32 19/08/28 Copyright 1985-2015 J. Schilling */
9c9
< 	"@(#)version.c	1.31 18/10/07 Copyright 1985-2015 J. Schilling";
---
> 	"@(#)version.c	1.32 19/08/28 Copyright 1985-2015 J. Schilling";
diff -r /tmp/schily-2019-08-13//btcflash/Makefile.man ./btcflash/Makefile.man
1c1
< #ident %W% %E% %Q%
---
> #ident @(#)Makefile.man	1.1 06/02/08 
diff -r /tmp/schily-2019-08-13//cal/cal.1 ./cal/cal.1
51c51
< .TH cal 1 "2019/05/23" "SunOS 5.11" "User Commands"
---
> .TH cal 1 "2019/08/28" "SunOS 5.11" "User Commands"
140a141,146
> or
> .sp
> .in +5
> .IB yyyy - mm - dd
> .in -5
> .sp
159a166,173
> .sp
> A leading
> .B +
> sign in
> .B GREGORIAN
> allows to enforce the switch date even when in the
> .B C 
> locale.
diff -r /tmp/schily-2019-08-13//cal/cal.c ./cal/cal.c
33c33
<  * @(#)cal.c       1.5 19/05/30 J. Schilling
---
>  * @(#)cal.c       1.7 19/08/28 J. Schilling
109c109
<  * Prussia: 1616/08/23		e.g. Berlin, spans two months
---
>  * Prussia: 1612/08/23		e.g. Berlin, spans two months
157,158c157,161
< 	if (strcmp(lcl, "C") != 0 &&
< 	    (ep = getenv("GREGORIAN")) != NULL) {
---
> 	if ((ep = getenv("GREGORIAN")) != NULL &&
> 	    (*ep == '+' || strcmp(lcl, "C") != 0)) {
> 		/*
> 		 * If *ep == '+', we enforce to honor "GREGORIAN".
> 		 */
478a482
> 	char	c;
479a484,485
> 	if (*ep == '+')		/* Skip force marker */
> 		ep++;
491c497,498
< 	if (y == 0 || *p++ != '/')
---
> 	c = *p++;
> 	if (y == 0 || (c != '/' && c != '-'))
495c502,503
< 	if (m == 0 || *p++ != '/')
---
> 	c = *p++;
> 	if (m == 0 || (c != '/' && c != '-'))
diff -r /tmp/schily-2019-08-13//cdda2wav/sndconfig.c ./cdda2wav/sndconfig.c
1c1
< /* @(#)sndconfig.c	1.44 15/10/14 Copyright 1998-2004,2015 Heiko Eissfeldt, Copyright 2004-2015 J. Schilling */
---
> /* @(#)sndconfig.c	1.45 19/09/01 Copyright 1998-2004,2015 Heiko Eissfeldt, Copyright 2004-2019 J. Schilling */
5c5
< "@(#)sndconfig.c	1.44 15/10/14 Copyright 1998-2004,2015 Heiko Eissfeldt, Copyright 2004-2015 J. Schilling";
---
> "@(#)sndconfig.c	1.45 19/09/01 Copyright 1998-2004,2015 Heiko Eissfeldt, Copyright 2004-2019 J. Schilling";
618c618
< 			(uint32_t)waveOutProc, 0, CALLBACK_FUNCTION);
---
> 			(UInt32_t)waveOutProc, 0, CALLBACK_FUNCTION);
diff -r /tmp/schily-2019-08-13//conf/cc-config.sh ./conf/cc-config.sh
2c2
< # @(#)cc-config.sh	1.14 18/04/04 Copyright 2002-2018 J. Schilling
---
> # @(#)cc-config.sh	1.16 19/09/22 Copyright 2002-2019 J. Schilling
4c4
< # Written 2002-2018 by J. Schilling
---
> # Written 2002-2019 by J. Schilling
46a47,48
> export LC_ALL
> export LANG
105c107,110
< eval "$CC > /dev/null 2>&1" 2> /dev/null
---
> # eval needs a subshell to support the V7 Shell that does not do IO redirection
> # for builtins like eval.
> #
> (eval "$CC > /dev/null 2>&1") 2> /dev/null
119c124
< 	ccout=`eval "$CC 2>&1" 2>/dev/null`
---
> 	ccout=`(eval "$CC 2>&1") 2>/dev/null`
145c150
< 	CC_V=`eval "$CC -v > /dev/null" 2>&1`
---
> 	CC_V=`(eval "$CC -v > /dev/null") 2>&1`
150c155
< 		if eval "gcc -v 2> /dev/null" 2>/dev/null; then
---
> 		if (eval "gcc -v 2> /dev/null") 2>/dev/null; then
154c159
< 		if eval "clang -v 2> /dev/null" 2>/dev/null; then
---
> 		if (eval "clang -v 2> /dev/null") 2>/dev/null; then
170c175,176
< 			:> $PLATFORM_FILE
---
> 			# (:) needed to work around a V7 shell bug
> 			(:)> $PLATFORM_FILE
177c183,184
< 			:> $PLATFORM_FILE
---
> 			# (:) needed to work around a V7 shell bug
> 			(:)> $PLATFORM_FILE
193c200
< 	ccout=`eval "$XCC -c tt.$$.c 2>&1" 2> /dev/null`
---
> 	ccout=`(eval "$XCC -c tt.$$.c 2>&1") 2> /dev/null`
238c245
< 	eval "gcc -v" 2> /dev/null && CC=gcc CC_FOUND=TRUE
---
> 	(eval "gcc -v") 2> /dev/null && CC=gcc CC_FOUND=TRUE
244c251
< CC_V=`eval "$CC -v > /dev/null" 2>&1`
---
> CC_V=`(eval "$CC -v > /dev/null") 2>&1`
249c256
< 	if eval "gcc -v 2> /dev/null" 2>/dev/null; then
---
> 	if (eval "gcc -v 2> /dev/null") 2>/dev/null; then
254c261
< 	if eval "clang -v 2> /dev/null" 2>/dev/null; then
---
> 	if (eval "clang -v 2> /dev/null") 2>/dev/null; then
276c283,284
< 		:> $PLATFORM_FILE
---
> 		# (:) needed to work around a V7 shell bug
> 		(:)> $PLATFORM_FILE
diff -r /tmp/schily-2019-08-13//cpp/cpp.1 ./cpp/cpp.1
1c1
< .\" @(#)cpp.1	1.12 19/08/07 Copyright 2010-2019 J. Schilling
---
> .\" @(#)cpp.1	1.13 19/08/27 Copyright 2010-2019 J. Schilling
16c16
< .TH CPP 1 "19/08/07" "J\*org Schilling" "Schily\'s USER COMMANDS"
---
> .TH CPP 1 "19/08/27" "J\*org Schilling" "Schily\'s USER COMMANDS"
76c76,78
< The default is to suppress C-style comments.
---
> The default is to suppress C-style comments and (if enabled via
> .BR \-B )
> C++-style comments.
diff -r /tmp/schily-2019-08-13//cpp/cpy.y ./cpp/cpy.y
2c2,3
< /* @(#)cpy.y	1.6 18/06/17 2010-2018 J. Schilling */
---
> /* @(#)cpy.y	1.8 19/08/29 2010-2019 J. Schilling */
> #include <schily/mconfig.h>
4,5c5,6
< static	char y_sccsid[] =
< 	"@(#)cpy.y	1.6 18/06/17 2010-2018 J. Schilling";
---
> static	UConst char y_sccsid[] =
> 	"@(#)cpy.y	1.8 19/08/29 2010-2019 J. Schilling";
11c12
<  * Copyright (c) 2010-2018 J. Schilling
---
>  * Copyright (c) 2010-2019 J. Schilling
75a77
> #include <schily/limits.h>
104a107,109
> 			} else if ($1 == INT_MIN && $3 == -1) {
> 				yyerror("division overflow");
> 				$$ = INT_MIN;
113a119,121
> 			} else if ($1 == INT_MIN && $3 == -1) {
> 				yyerror("division overflow");
> 				$$ = INT_MIN;
diff -r /tmp/schily-2019-08-13//cpp/cpypre.c ./cpp/cpypre.c
76a77
> #include <schily/limits.h>
153c154
< # line 169 "cpy.y"
---
> # line 176 "cpy.y"
391c392
< #pragma ident	"@(#)cpypre.c	1.3	18/12/30 SMI"
---
> #pragma ident	"@(#)cpypre.c	1.4	19/08/29 SMI"
918c919
< # line 95 "cpy.y"
---
> # line 96 "cpy.y"
921c922
< # line 99 "cpy.y"
---
> # line 100 "cpy.y"
924c925
< # line 101 "cpy.y"
---
> # line 102 "cpy.y"
928a930,932
> 			} else if (yypvt[-2] == INT_MIN && yypvt[-0] == -1) {
> 				yyerror("division overflow");
> 				yyval = INT_MIN;
934c938
< # line 110 "cpy.y"
---
> # line 114 "cpy.y"
938a943,945
> 			} else if (yypvt[-2] == INT_MIN && yypvt[-0] == -1) {
> 				yyerror("division overflow");
> 				yyval = INT_MIN;
944c951
< # line 119 "cpy.y"
---
> # line 126 "cpy.y"
947c954
< # line 121 "cpy.y"
---
> # line 128 "cpy.y"
950c957
< # line 123 "cpy.y"
---
> # line 130 "cpy.y"
953c960
< # line 125 "cpy.y"
---
> # line 132 "cpy.y"
956c963
< # line 127 "cpy.y"
---
> # line 134 "cpy.y"
959c966
< # line 129 "cpy.y"
---
> # line 136 "cpy.y"
962c969
< # line 131 "cpy.y"
---
> # line 138 "cpy.y"
965c972
< # line 133 "cpy.y"
---
> # line 140 "cpy.y"
968c975
< # line 135 "cpy.y"
---
> # line 142 "cpy.y"
971c978
< # line 137 "cpy.y"
---
> # line 144 "cpy.y"
974c981
< # line 139 "cpy.y"
---
> # line 146 "cpy.y"
977c984
< # line 141 "cpy.y"
---
> # line 148 "cpy.y"
980c987
< # line 143 "cpy.y"
---
> # line 150 "cpy.y"
983c990
< # line 145 "cpy.y"
---
> # line 152 "cpy.y"
986c993
< # line 147 "cpy.y"
---
> # line 154 "cpy.y"
989c996
< # line 149 "cpy.y"
---
> # line 156 "cpy.y"
992c999
< # line 151 "cpy.y"
---
> # line 158 "cpy.y"
995c1002
< # line 153 "cpy.y"
---
> # line 160 "cpy.y"
998c1005
< # line 156 "cpy.y"
---
> # line 163 "cpy.y"
1001c1008
< # line 158 "cpy.y"
---
> # line 165 "cpy.y"
1004c1011
< # line 160 "cpy.y"
---
> # line 167 "cpy.y"
1007c1014
< # line 162 "cpy.y"
---
> # line 169 "cpy.y"
1010c1017
< # line 164 "cpy.y"
---
> # line 171 "cpy.y"
1013c1020
< # line 166 "cpy.y"
---
> # line 173 "cpy.y"
1016c1023
< # line 168 "cpy.y"
---
> # line 175 "cpy.y"
1022d1028
< 
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cpp/tests und ./cpp/tests
diff -r /tmp/schily-2019-08-13//cpp/yylex.c ./cpp/yylex.c
1c1,2
< /* @(#)yylex.c	1.8 15/02/19 2010-2015 J. Schilling */
---
> /* @(#)yylex.c	1.9 19/08/29 2010-2019 J. Schilling */
> #include <schily/mconfig.h>
3,4c4,5
< static	char sccsid[] =
< 	"@(#)yylex.c	1.8 15/02/19 2010-2015 J. Schilling";
---
> static	UConst char sccsid[] =
> 	"@(#)yylex.c	1.9 19/08/29 2010-2019 J. Schilling";
10c11
<  * Copyright (c) 2010-2015 J. Schilling
---
>  * Copyright (c) 2010-2019 J. Schilling
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cpp/tests/basic und ./cpp/tests/basic
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//cpp/tests/common und ./cpp/tests/common
diff -r /tmp/schily-2019-08-13//cstyle/Cstyle-sh.mk ./cstyle/Cstyle-sh.mk
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)Cstyle-sh.mk	1.1 09/11/19 "
diff -r /tmp/schily-2019-08-13//cstyle/Cstyle-shman.mk ./cstyle/Cstyle-shman.mk
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)Cstyle-shman.mk	1.1 09/11/19 "
diff -r /tmp/schily-2019-08-13//cstyle/Makefile ./cstyle/Makefile
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)Makefile	1.1 09/11/19 "
diff -r /tmp/schily-2019-08-13//cstyle/Makefile.man ./cstyle/Makefile.man
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)Makefile.man	1.1 09/11/19 "
diff -r /tmp/schily-2019-08-13//cstyle/cstyle.mk ./cstyle/cstyle.mk
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)cstyle.mk	1.1 09/11/19 "
diff -r /tmp/schily-2019-08-13//inc/avoffset.c ./inc/avoffset.c
18c18,30
< /*@@C@@*/
---
> /*
>  * The contents of this file are subject to the terms of the
>  * Common Development and Distribution License, Version 1.0 only
>  * (the "License").  You may not use this file except in compliance
>  * with the License.
>  *
>  * See the file CDDL.Schily.txt in this distribution for details.
>  * A copy of the CDDL is also available via the Internet at
>  * http://www.opensource.org/licenses/cddl1.txt
>  *
>  * When distributing Covered Code, include this CDDL HEADER in each
>  * file and include the License file CDDL.Schily.txt from this distribution.
>  */
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//include/scg und ./include/scg
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//include/schily und ./include/schily
diff -r /tmp/schily-2019-08-13//include/schily/fetchdir.h ./include/schily/fetchdir.h
1c1
< /* @(#)fetchdir.h	1.8 16/03/10 Copyright 2002-2016 J. Schilling */
---
> /* @(#)fetchdir.h	1.9 19/09/08 Copyright 2002-2019 J. Schilling */
3c3
<  *	Copyright (c) 2002-2016 J. Schilling
---
>  *	Copyright (c) 2002-2019 J. Schilling
28c28
<  * We thus need to make this value the "unknown" type value and this  finally
---
>  * We thus need to make this value the "unknown" type value and this finally
31,39c31,39
< #define	FDT_UNKN	 1
< #define	FDT_FIFO	 2
< #define	FDT_CHR		 3
< #define	FDT_DIR		 5
< #define	FDT_BLK		 7
< #define	FDT_REG		 9
< #define	FDT_LNK		11
< #define	FDT_SOCK	13
< #define	FDT_WHT		15
---
> #define	FDT_UNKN	 1	/* Unknown, e.g dirent d_type is missing */
> #define	FDT_FIFO	 2	/* A FIFO special named pipe		*/
> #define	FDT_CHR		 3	/* A character special device node	*/
> #define	FDT_DIR		 5	/* A directory				*/
> #define	FDT_BLK		 7	/* A block special device node		*/
> #define	FDT_REG		 9	/* A regular file			*/
> #define	FDT_LNK		11	/* A symbolic link			*/
> #define	FDT_SOCK	13	/* A socket special			*/
> #define	FDT_WHT		15	/* A whiteout directory entry		*/
diff -r /tmp/schily-2019-08-13//include/schily/param.h ./include/schily/param.h
14,15d13
<  * A copy of the CDDL is also available via the Internet at
<  * http://www.opensource.org/licenses/cddl1.txt
diff -r /tmp/schily-2019-08-13//include/schily/resource.h ./include/schily/resource.h
1c1
< /* @(#)resource.h	1.11 15/08/14 Copyright 1995-2015 J. Schilling */
---
> /* @(#)resource.h	1.13 19/09/16 Copyright 1995-2019 J. Schilling */
7c7
<  *	Copyright (c) 1995-2015 J. Schilling
---
>  *	Copyright (c) 1995-2019 J. Schilling
29a30,33
> #ifndef	_SCHILY_STDINT_H
> #include <schily/stdint.h>	/* May be needed for rlim_t */
> #endif
> 
94a99,102
> #ifndef	HAVE_TYPE_RLIM_T
> #define	rlim_t	Intmax_t
> #endif
> 
112,115d119
< #ifndef	HAVE_TYPE_RLIM_T
< #define	rlim_t	Intmax_t
< #endif
< 
diff -r /tmp/schily-2019-08-13//include/schily/shcall.h ./include/schily/shcall.h
1c1
< /* @(#)shcall.h	1.4 18/08/01 Copyright 2009-2018 J. Schilling */
---
> /* @(#)shcall.h	1.5 19/08/17 Copyright 2009-2019 J. Schilling */
5c5
<  *	Copyright (c) 2009-2018 J. Schilling
---
>  *	Copyright (c) 2009-2019 J. Schilling
55c55
< #define	SQ_CALL	0x01		/* Use call feature */	
---
> #define	SQ_CALL	0x01		/* Use call feature */
diff -r /tmp/schily-2019-08-13//include/schily/signal.h ./include/schily/signal.h
1c1
< /* @(#)signal.h	1.13 18/06/16 Copyright 1997-2018 J. Schilling */
---
> /* @(#)signal.h	1.14 19/08/17 Copyright 1997-2019 J. Schilling */
5c5
<  *	Copyright (c) 1997-2018 J. Schilling
---
>  *	Copyright (c) 1997-2019 J. Schilling
71a72,75
> #ifdef	__cplusplus
> extern "C" {
> #endif
> 
83a88,91
> #ifdef	__cplusplus
> }
> #endif
> 
diff -r /tmp/schily-2019-08-13//include/schily/strar.h ./include/schily/strar.h
1c1
< /* @(#)strar.h	1.5 18/05/17 Copyright 2001-2018 J. Schilling */
---
> /* @(#)strar.h	1.6 19/08/17 Copyright 2001-2019 J. Schilling */
8c8
<  *	Copyright (c) 2001-2018 J. Schilling
---
>  *	Copyright (c) 2001-2019 J. Schilling
39a40,43
> #ifdef	__cplusplus
> extern "C" {
> #endif
> 
186a191,193
> #ifdef	__cplusplus
> }
> #endif
diff -r /tmp/schily-2019-08-13//include/schily/type_val.h ./include/schily/type_val.h
1c1
< /* @(#)type_val.h	1.1 19/02/28 Copyright 2002-2019 J. Schilling */
---
> /* @(#)type_val.h	1.2 19/08/17 Copyright 2002-2019 J. Schilling */
86c86
< #define TYPE_MSBVAL(t)		(2 * -(((t)1) << (sizeof (t)*CHAR_BIT - 2)))
---
> #define	TYPE_MSBVAL(t)		(2 * -(((t)1) << (sizeof (t)*CHAR_BIT - 2)))
diff -r /tmp/schily-2019-08-13//include/schily/wait.h ./include/schily/wait.h
1c1
< /* @(#)wait.h	1.28 18/06/07 Copyright 1995-2018 J. Schilling */
---
> /* @(#)wait.h	1.29 19/09/20 Copyright 1995-2019 J. Schilling */
5c5
<  *	Copyright (c) 1995-2018 J. Schilling
---
>  *	Copyright (c) 1995-2019 J. Schilling
208a209,226
> #ifdef	ultrix
> /*
>  * The W*() macros on Ultrix do not work and this is a result of
>  * an incorrect definition for union wait. The kernel uses the
>  * right bits in the status, so we #undef USE_UNION_WAIT and all
>  * W*() macros. This results in #defining our working versions.
>  */
> #undef	USE_UNION_WAIT
> #undef	WTERMSIG
> #undef	WCOREDUMP
> #undef	WEXITSTATUS
> #undef	WSTOPSIG
> #undef	WIFCONTINUED
> #undef	WIFSTOPPED
> #undef	WIFSIGNALED
> #undef	WIFEXITED
> #endif	/* ultrix */
> 
diff -r /tmp/schily-2019-08-13//include/schily/walk.h ./include/schily/walk.h
1c1
< /* @(#)walk.h	1.35 18/10/29 Copyright 2004-2018 J. Schilling */
---
> /* @(#)walk.h	1.37 19/09/08 Copyright 2004-2019 J. Schilling */
5c5
<  *	Copyright (c) 2004-2018 J. Schilling
---
>  *	Copyright (c) 2004-2019 J. Schilling
124a125
> #define	WALK_WF_ISLNK	64	/* walk() -> walk(): file is a symlink	    */
140a142
> extern	int	walknlen	__PR((struct WALK *_state));
diff -r /tmp/schily-2019-08-13//include/schily/wctype.h ./include/schily/wctype.h
1c1
< /* @(#)wctype.h	1.11 18/05/17 Copyright 2009-2018 J. Schilling */
---
> /* @(#)wctype.h	1.14 19/08/17 Copyright 2009-2019 J. Schilling */
5c5
<  *	Copyright (c) 2009-2018 J. Schilling
---
>  *	Copyright (c) 2009-2019 J. Schilling
107a108,111
> #ifdef	__cplusplus
> extern "C" {
> #endif
> 
112c116
< extern	int		iswctype	__PR((wint_t , wctype_t));
---
> extern	int		iswctype	__PR((wint_t, wctype_t));
114a119,122
> #ifdef	__cplusplus
> }
> #endif
> 
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//lib/TARGETS und ./lib/TARGETS
diff -r /tmp/schily-2019-08-13//libfind/find.c ./libfind/find.c
2c2
< /* @(#)find.c	1.118 19/01/08 Copyright 2004-2019 J. Schilling */
---
> /* @(#)find.c	1.119 19/09/07 Copyright 2004-2019 J. Schilling */
6c6
< 	"@(#)find.c	1.118 19/01/08 Copyright 2004-2019 J. Schilling";
---
> 	"@(#)find.c	1.119 19/09/07 Copyright 2004-2019 J. Schilling";
52a53
> #include <schily/libgen.h>	/* Past string.h, avoid Linux basename() bug */
1534a1536,1542
> 		if (p[walknlen(state)-1] == '/') {
> 			/*
> 			 * Remove trailing slashes
> 			 */
> 			strlcpy(lname, p, sizeof (lname));
> 			p = basename(lname);
> 		}
1573a1582,1588
> 		if (p[walknlen(state)-1] == '/') {
> 			/*
> 			 * Remove trailing slashes
> 			 */
> 			strlcpy(lname, p, sizeof (lname));
> 			p = basename(lname);
> 		}
diff -r /tmp/schily-2019-08-13//libfind/find_list.c ./libfind/find_list.c
1c1
< /* @(#)find_list.c	1.29 19/04/07 Copyright 1985, 1995, 2000-2019 J. Schilling */
---
> /* @(#)find_list.c	1.30 19/09/16 Copyright 1985, 1995, 2000-2019 J. Schilling */
5c5
< 	"@(#)find_list.c	1.29 19/04/07 Copyright 1985, 1995, 2000-2019 J. Schilling";
---
> 	"@(#)find_list.c	1.30 19/09/16 Copyright 1985, 1995, 2000-2019 J. Schilling";
258c258
< #ifdef	S_IFPORT
---
> #if defined(S_IFPORT) && S_IFPORT != S_IFIFO	/* Do not use it on Ultrix */
diff -r /tmp/schily-2019-08-13//libfind/find_misc.h ./libfind/find_misc.h
1c1
< /* @(#)find_misc.h	1.8 18/08/20 Copyright 2004-2018 J. Schilling */
---
> /* @(#)find_misc.h	1.9 19/09/14 Copyright 2004-2019 J. Schilling */
3c3
<  *	Copyright (c) 2004-2018 J. Schilling
---
>  *	Copyright (c) 2004-2019 J. Schilling
30a31,33
> #ifndef _SCHILY_TIME_H
> #include <schily/time.h>
> #endif
diff -r /tmp/schily-2019-08-13//libfind/libfind-mapvers ./libfind/libfind-mapvers
1c1
< # /* @(#)libfind-mapvers	1.15 18/08/30 Copyright 2005-2018 J. Schilling */
---
> # /* @(#)libfind-mapvers	1.16 19/09/07 Copyright 2005-2019 J. Schilling */
9a10,14
> "SCHILY_0.9.3" {	# Not yet a stable interface!
> global:
> 	walknlen;	# walk.c
> } "SCHILY_0.9.2";
> 
diff -r /tmp/schily-2019-08-13//libfind/walk.c ./libfind/walk.c
1c1
< /* @(#)walk.c	1.59 18/10/28 Copyright 2004-2018 J. Schilling */
---
> /* @(#)walk.c	1.62 19/09/08 Copyright 2004-2019 J. Schilling */
5c5
< 	"@(#)walk.c	1.59 18/10/28 Copyright 2004-2018 J. Schilling";
---
> 	"@(#)walk.c	1.62 19/09/08 Copyright 2004-2019 J. Schilling";
10c10
<  *	Copyright (c) 2004-2018 J. Schilling
---
>  *	Copyright (c) 2004-2019 J. Schilling
50,52c50,51
< #ifdef	HAVE_FCHDIR
< #include <schily/fcntl.h>
< #else
---
> #include <schily/fcntl.h>	/* AT_FDCWD */
> #ifndef	HAVE_FCHDIR
116a116
> 	int		Snmlen;		/* Short nm len for walk()	*/
152a153
> EXPORT	int	walknlen	__PR((struct WALK *_state));
228a230
> 	vars.Snmlen = nlen;
277d278
< 	char		*p;
293a295,296
> 			char	*p;
> 
296a300,319
> 			/*
> 			 * Let state->base point to the last component for
> 			 * command line arguments indicated by otail == 0.
> 			 */
> 			if (otail == 0) {
> 				char		*e = p;
> 				register char	*c = varp->Curdir;
> 
> 				while (--p > c) {	/* Skip trailing '/' */
> 					if (*p != '/')
> 						break;
> 				}
> 				if (*p != '/') {	/* Not only '/'s */
> 					while (p >= c && *p != '/')
> 						p--;
> 					p++;		/* To first non '/' */
> 				}
> 				state->base = p - varp->Curdir;
> 				varp->Snmlen = e-p;
> 			}
298a322,323
> 		char	*p;
> 
307c332,333
< 	    (state->flags & WALK_WF_NOTDIR) ||
---
> 	    ((state->flags & (WALK_WF_NOTDIR|WALK_WF_ISLNK)) ==
> 		WALK_WF_NOTDIR) ||
422a449,453
> #ifndef	HAVE_DIRENT_D_TYPE
> 			else if (state->walkflags &
> 					(WALK_ARGFOLLOW|WALK_ALLFOLLOW))
> 				thisd.p_stat  = TRUE;
> #endif
507a539
> 			int	olen = varp->Snmlen;
546c578,582
< 				if (dp[0] != FDT_DIR && dp[0] != FDT_UNKN)
---
> 				if (dp[0] == FDT_LNK) {
> 					state->flags |=
> 					    WALK_WF_NOTDIR|WALK_WF_ISLNK;
> 
> 				} else if (dp[0] != FDT_DIR && dp[0] != FDT_UNKN) {
547a584
> 				}
549a587
> 				varp->Snmlen = nlen;
557a596
> 			varp->Snmlen = olen;
812a852,863
> /*
>  * Return length of last pathnmame component.
>  */
> EXPORT int
> walknlen(state)
> 	struct WALK	*state;
> {
> 	struct twvars	*varp = state->twprivate;
> 
> 	return (varp->Snmlen);
> }
> 
diff -r /tmp/schily-2019-08-13//libparanoia/pmalloc.h ./libparanoia/pmalloc.h
7c7,20
< /*@@C@@*/
---
> /*
>  * This library is free software; you can redistribute it and/or modify
>  * it under the terms of the GNU Lesser General Public License version 2.1
>  * as published by the Free Software Foundation.
>  *
>  * This library is distributed in the hope that it will be useful,
>  * but WITHOUT ANY WARRANTY; without even the implied warranty of
>  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
>  * Lesser General Public License for more details.
>  *
>  * You should have received a copy of the GNU Lesser General Public
>  * License along with this library; if not, write to the Free Software
>  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
>  */
diff -r /tmp/schily-2019-08-13//librmt/Makefile ./librmt/Makefile
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)Makefile	1.1 06/09/14 "
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libscg/scg und ./libscg/scg
diff -r /tmp/schily-2019-08-13//libschily/Targets ./libschily/Targets
1c1
< # @(#)Targets	1.65 18/10/14 Copyright 1995-2018 J. Schilling
---
> # @(#)Targets	1.66 19/08/16 Copyright 1995-2018 J. Schilling
22c22,23
< CFILES_REST=	abspath.c astoi.c astoll.c astoul.c astoull.c basename.c breakline.c \
---
> CFILES_REST=	abspath.c \
> 		astoi.c astoll.c astoul.c astoull.c basename.c breakline.c \
70c71,72
< 		strdup.c streql.c strlen.c strlcat.c strlcatl.c strlcpy.c strncat.c strncmp.c \
---
> 		strdup.c streql.c strlen.c \
> 		strlcat.c strlcatl.c strlcpy.c strncat.c strncmp.c \
79c81,82
< 		wcsdup.c wcseql.c wcslen.c wcslcat.c wcslcatl.c wcslcpy.c wcsncat.c wcsncmp.c \
---
> 		wcsdup.c wcseql.c wcslen.c \
> 		wcslcat.c wcslcatl.c wcslcpy.c wcsncat.c wcsncmp.c \
diff -r /tmp/schily-2019-08-13//libschily/comerr.c ./libschily/comerr.c
1c1
< /* @(#)comerr.c	1.46 17/11/03 Copyright 1985-1989, 1995-2017 J. Schilling */
---
> /* @(#)comerr.c	1.47 19/09/27 Copyright 1985-1989, 1995-2017 J. Schilling */
297a298
> 	char	*p;
314,315c315,316
< 	 * EX_BAD (-1) as default error exit code and
< 	 * EX_CLASH (-64) as marker for clashes.
---
> 	 * EX_BAD (-1) (255) as default error exit code and
> 	 * EX_CLASH (-64) (192) as marker for clashes.
318,319c319
< 	 * We map all other negative exit codes to EX_CLASH if they would fold
< 	 * to -2..-63.
---
> 	 * We map all other negative exit codes to EX_CLASH.
324c324,335
< 	if (getenv("COMERR_EXCODE"))
---
> 	if ((p = getenv("COMERR_EXCODE")) != NULL) {
> 		if (*p == '0') {
> 			/*
> 			 * Modern shells that use waitpid() still interpret
> 			 * excode % 256 == 0 as a zero exit code with respect
> 			 * to conditional execution for compatibility with
> 			 * historic shells. Use "export COMERR_EXCODE=0" to
> 			 * request support for this problem.
> 			 */
> 			if (exmod == 0 && exc != 0)
> 				return(EX_CLASH);
> 		} 
326c337,341
< 	if (exc != exmod && exmod <= 0 && exmod >= EX_CLASH)
---
> 	}
> 
> 	if ((exc != exmod) ||
> 	    (exmod < EX_CLASH) ||
> 	    ((exmod > 0) && (exmod & 0377) >= (EX_CLASH & 0377)))
diff -r /tmp/schily-2019-08-13//libschily/dirent.c ./libschily/dirent.c
1c1
< /* @(#)dirent.c	1.4 17/02/02 Copyright 2011-2017 J. Schilling */
---
> /* @(#)dirent.c	1.5 19/09/01 Copyright 2011-2019 J. Schilling */
5c5
< 	"@(#)dirent.c	1.4 17/02/02 Copyright 2011-2017 J. Schilling";
---
> 	"@(#)dirent.c	1.5 19/09/01 Copyright 2011-2019 J. Schilling";
8c8
<  *	Copyright (c) 2011-2017 J. Schilling
---
>  *	Copyright (c) 2011-2019 J. Schilling
47c47
< 	uint32_t attr;
---
> 	UInt32_t attr;
138c138
< 			uint32_t	werrno = GetLastError();
---
> 			UInt32_t	werrno = GetLastError();
diff -r /tmp/schily-2019-08-13//libschily/format.c ./libschily/format.c
1c1
< /* @(#)format.c	1.73 18/11/21 Copyright 1985-2018 J. Schilling */
---
> /* @(#)format.c	1.74 19/09/12 Copyright 1985-2019 J. Schilling */
9c9
<  *	Copyright (c) 1985-2018 J. Schilling
---
>  *	Copyright (c) 1985-2019 J. Schilling
294c294
< 		farg = (void *)((UIntptr_t)farg & ~1);
---
> 		farg = (void *)((UIntptr_t)farg & ~(UIntptr_t)1);
diff -r /tmp/schily-2019-08-13//libschily/gethostname.c ./libschily/gethostname.c
1c1
< /* @(#)gethostname.c	1.22 19/03/26 Copyright 1995-2019 J. Schilling */
---
> /* @(#)gethostname.c	1.23 19/09/01 Copyright 1995-2019 J. Schilling */
5c5
< 	"@(#)gethostname.c	1.22 19/03/26 Copyright 1995-2019 J. Schilling";
---
> 	"@(#)gethostname.c	1.23 19/09/01 Copyright 1995-2019 J. Schilling";
77c77
< 	uint32_t	len = namelen;
---
> 	UInt32_t	len = namelen;
diff -r /tmp/schily-2019-08-13//libschily/kill.c ./libschily/kill.c
1c1
< /* @(#)kill.c	1.1 11/08/05 Copyright 2011 J. Schilling */
---
> /* @(#)kill.c	1.2 19/09/01 Copyright 2011-2019 J. Schilling */
5c5
< 	"@(#)kill.c	1.1 11/08/05 Copyright 2011 J. Schilling";
---
> 	"@(#)kill.c	1.2 19/09/01 Copyright 2011-2019 J. Schilling";
8c8
<  *	Copyright (c) 2011 J. Schilling
---
>  *	Copyright (c) 2011-2019 J. Schilling
48,49c48,49
< 	uint32_t	procs[MAX_PIDS];
< 	uint32_t	nents;
---
> 	UInt32_t	procs[MAX_PIDS];
> 	UInt32_t	nents;
59c59
< 	nents /= sizeof (uint32_t);
---
> 	nents /= sizeof (UInt32_t);
diff -r /tmp/schily-2019-08-13//libschily/match.c ./libschily/match.c
1c1
< /* @(#)match.c	1.33 19/01/08 Copyright 1985, 1995-2019 J. Schilling */
---
> /* @(#)match.c	1.36 19/09/21 Copyright 1985, 1995-2019 J. Schilling */
128,159c128,157
< #define	CHK_POSIX_CLASS						\
< 	if (*lpat == LCLASS) {					\
< 		if (lpat[1] == ':') {				\
< 			char	class[CL_SIZE+1];		\
< 			char	*pc = class;			\
< 								\
< 			lpat += 2;	/* Eat ':' */		\
< 			for (;;) {				\
< 				if (*lpat == '\0') {		\
< 					ok = FALSE;		\
< 					goto out;		\
< 				}				\
< 				if (*lpat == ':' && lpat[1] == RCLASS) \
< 					break;			\
< 				if (pc >= &class[CL_SIZE]) {	\
< 					ok = FALSE;		\
< 					goto out;		\
< 				}				\
< 				*pc++ = *lpat++;		\
< 			}					\
< 			if (pc == class) {			\
< 				ok = FALSE;			\
< 				goto out;			\
< 			}					\
< 			*pc = '\0';				\
< 			lpat += 2;	/* Skip ":]" */		\
< 			if (iswctype(lc, wctype(class))) {	\
< 				ok = !ok;			\
< 				goto out;			\
< 			}					\
< 			continue;				\
< 		}						\
---
> #define	CHK_POSIX_CLASS					\
> 	if (*lpat == LCLASS && lpat[1] == ':') {	\
> 		char	class[CL_SIZE+1];		\
> 		char	*pc = class;			\
> 							\
> 		lpat += 2;	/* Eat ':' */		\
> 		for (;;) {				\
> 			if (*lpat == '\0') {		\
> 				ok = FALSE;		\
> 				goto out;		\
> 			}				\
> 			if (*lpat == ':' && lpat[1] == RCLASS) \
> 				break;			\
> 			if (pc >= &class[CL_SIZE]) {	\
> 				ok = FALSE;		\
> 				goto out;		\
> 			}				\
> 			*pc++ = *lpat++;		\
> 		}					\
> 		if (pc == class) {			\
> 			ok = FALSE;			\
> 			goto out;			\
> 		}					\
> 		*pc = '\0';				\
> 		lpat += 2;	/* Skip ":]" */		\
> 		if (iswctype(lc, wctype(class))) {	\
> 			ok = !ok;			\
> 			goto out;			\
> 		}					\
> 		continue;				\
175c173
< 	while (*lpat != RCLASS) {			\
---
> 	do {						\
196c194
< 	}						\
---
> 	} while (*lpat != RCLASS);			\
448c446
< 	nextitem(ap);
---
> 	nextitem(ap);			/* Eat '[' */
458,459d455
< 		if (ap->Ch != LCLASS)
< 			nextitem(ap);	/* Eat char at first position */
461c457,459
< 		while (ap->Ch != RCLASS && ap->Ch != '\0') {
---
> 		t = TRUE;		/* Allow ] as first character */
> 		while ((t || ap->Ch != RCLASS) && ap->Ch != '\0') {
> 			t = FALSE;
468,469c466,467
< 					nextitem(ap);
< 					nextitem(ap);
---
> 					nextitem(ap);		/* eat '[' */
> 					nextitem(ap);		/* eat ':' */
486a485,486
> 					if (ap->Ch != RCLASS)
> 						return (ENDSTATE);
488,489d487
< 				if (ap->Ch != RCLASS)
< 					return (ENDSTATE);
diff -r /tmp/schily-2019-08-13//libschily/resolvepath.c ./libschily/resolvepath.c
1c1
< /* @(#)resolvepath.c	1.9 19/07/31 Copyright 2011-2019 J. Schilling */
---
> /* @(#)resolvepath.c	1.10 19/09/27 Copyright 2011-2019 J. Schilling */
4a5,6
>  *	We however also implement the resolvenpath() variant that does
>  *	not require the file to exist.
23,24c25,26
<  * Since we need to call stat()/lstat() and since this is not a predictable call,
<  * we always compile this module in largefile mode.
---
>  * Since we need to call stat()/lstat() and since this is not a
>  * predictable call, we always compile this module in largefile mode.
100d101
< 
219a221,222
> 			char	c = *b;
> 			int	depth = (flags >> 8) + 1;
239a243,267
> 			/*
> 			 * Check whether we are in a symlink loop.
> 			 * This is when the path does not change or when
> 			 * we have too many symlinks in the path.
> 			 */
> #define	MAX_NEST	1024
> 			if (depth > MAX_NEST || strcmp(path, bx) == 0) {
> 				*b = c;
> #ifndef	HAVE_DYN_ARRAYS
> 				free(bx);
> #endif
> 				/*
> 				 * The Solaris syscall returns ELOOP in this
> 				 * case, so do we...
> 				 */
> 				if (depth > MAX_NEST || (flags & RSPF_EXIST)) {
> #ifdef	ELOOP
> 					seterrno(ELOOP);
> #else
> 					seterrno(EINVAL);
> #endif
> 					return (-1);
> 				}
> 				return (strlen(buf));
> 			}
241a270,271
> 			flags &= 0xFF;		/* Mask off depth counter */
> 			flags |= depth << 8;	/* Add new depth counter  */
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libschily/stdio und ./libschily/stdio
diff -r /tmp/schily-2019-08-13//libschily/uname.c ./libschily/uname.c
1c1
< /* @(#)uname.c	1.2 11/08/16 Copyright 2011 J. Schilling */
---
> /* @(#)uname.c	1.3 19/09/01 Copyright 2011-2019 J. Schilling */
5c5
< 	"@(#)uname.c	1.2 11/08/16 Copyright 2011 J. Schilling";
---
> 	"@(#)uname.c	1.3 19/09/01 Copyright 2011-2019 J. Schilling";
10c10
<  *	Copyright (c) 2011 J. Schilling
---
>  *	Copyright (c) 2011-2019 J. Schilling
69,72c69,72
< 	uint32_t	version;
< 	uint32_t	majversion;
< 	uint32_t	minversion;
< 	uint32_t	builtnum = 0;
---
> 	UInt32_t	version;
> 	UInt32_t	majversion;
> 	UInt32_t	minversion;
> 	UInt32_t	builtnum = 0;
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//libsiconv/tables und ./libsiconv/tables
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//man/man4 und ./man/man4
diff -r /tmp/schily-2019-08-13//mkisofs/Makefile ./mkisofs/Makefile
3c3,14
< #@@C@@
---
> # This program is free software; you can redistribute it and/or modify
> # it under the terms of the GNU General Public License version 2
> # as published by the Free Software Foundation.
> #
> # This program is distributed in the hope that it will be useful,
> # but WITHOUT ANY WARRANTY; without even the implied warranty of
> # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
> # GNU General Public License for more details.
> #
> # You should have received a copy of the GNU General Public License along with
> # this program; see the file COPYING.  If not, write to the Free Software
> # Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//mkisofs/diag und ./mkisofs/diag
diff -r /tmp/schily-2019-08-13//mkisofs/mkisofs.8 ./mkisofs/mkisofs.8
5d4
< .\"@@C@@
6a6,19
> .\" This program is free software; you can redistribute it and/or modify
> .\" it under the terms of the GNU General Public License version 2
> .\" as published by the Free Software Foundation.
> .\"
> .\" This program is distributed in the hope that it will be useful,
> .\" but WITHOUT ANY WARRANTY; without even the implied warranty of
> .\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
> .\" GNU General Public License for more details.
> .\"
> .\" You should have received a copy of the GNU General Public License along with
> .\" this program; see the file COPYING.  If not, write to the Free Software
> .\" Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
> .\"
> .\"
diff -r /tmp/schily-2019-08-13//mt/Makefile.man ./mt/Makefile.man
1c1
< #ident %W% %E% %Q%
---
> #ident @(#)Makefile.man	1.1 04/09/26 
diff -r /tmp/schily-2019-08-13//obosh/Makefile ./obosh/Makefile
1c1
< #ident "@(#)Makefile	1.101 19/06/11  Copyright (c) 2006-2018 J. Schilling"
---
> #ident "@(#)Makefile	1.102 19/09/28  Copyright (c) 2006-2019 J. Schilling"
72a73
> #CPPOPTS +=	-DDO_DOL_SLASH		# Include support for $/
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//obosh/tests und ./obosh/tests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//obosh/tests/common und ./obosh/tests/common
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//obosh/tests/shelltests und ./obosh/tests/shelltests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//obosh/tests/shelltests/bugs und ./obosh/tests/shelltests/bugs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//obosh/tests/shelltests/conf und ./obosh/tests/shelltests/conf
diff -r /tmp/schily-2019-08-13//patch/pch.c ./patch/pch.c
1c1
< /* @(#)pch.c	1.37 19/05/15 2011-2019 J. Schilling */
---
> /* @(#)pch.c	1.38 19/08/17 2011-2019 J. Schilling */
5c5
< 	"@(#)pch.c	1.37 19/05/15 2011-2019 J. Schilling";
---
> 	"@(#)pch.c	1.38 19/08/17 2011-2019 J. Schilling";
1422a1423
> 						TMPDIR,
1424c1425
< 						TMPDIR, TMPOUTNAME + TMPDLEN);
---
> 						TMPOUTNAME + TMPDLEN);
1426a1428
> 						TMPDIR,
1428c1430
< 						TMPDIR, TMPOUTNAME + TMPDLEN);
---
> 						TMPOUTNAME + TMPDLEN);
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//patch/tests und ./patch/tests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//patch/tests/basic und ./patch/tests/basic
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//patch/tests/common und ./patch/tests/common
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//patch/tests/random und ./patch/tests/random
diff -r /tmp/schily-2019-08-13//pbosh/Makefile ./pbosh/Makefile
1c1
< #ident "@(#)Makefile	1.158 19/06/11  Copyright (c) 2006-2018 J. Schilling"
---
> #ident "@(#)Makefile	1.159 19/09/28  Copyright (c) 2006-2019 J. Schilling"
73a74
> CPPOPTS +=	-DDO_DOL_SLASH		# Include support for $/
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW und ./pkgdefs/CSW
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW und ./pkgdefs/OCSW
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/default und ./pkgdefs/default
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWcdrtools und ./pkgdefs/CSW/CSWcdrtools
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWpxupgrade und ./pkgdefs/CSW/CSWpxupgrade
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWsccs und ./pkgdefs/CSW/CSWsccs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWschilybase und ./pkgdefs/CSW/CSWschilybase
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWschilyutils und ./pkgdefs/CSW/CSWschilyutils
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWsmake und ./pkgdefs/CSW/CSWsmake
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWstar und ./pkgdefs/CSW/CSWstar
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/CSW/CSWved und ./pkgdefs/CSW/CSWved
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWcdrtools und ./pkgdefs/OCSW/CSWcdrtools
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWpxupgrade und ./pkgdefs/OCSW/CSWpxupgrade
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWsccs und ./pkgdefs/OCSW/CSWsccs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWschilybase und ./pkgdefs/OCSW/CSWschilybase
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWschilyutils und ./pkgdefs/OCSW/CSWschilyutils
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWsmake und ./pkgdefs/OCSW/CSWsmake
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWstar und ./pkgdefs/OCSW/CSWstar
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/OCSW/CSWved und ./pkgdefs/OCSW/CSWved
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//pkgdefs/default/CSWcdrtools und ./pkgdefs/default/CSWcdrtools
diff -r /tmp/schily-2019-08-13//printf/Makefile ./printf/Makefile
1c1
< #ident @(#)Makefile	1.3 17/11/16 
---
> #ident @(#)Makefile	1.4 19/08/29 
9a10
> OINCSDIR +=	-I.			# Use local defs.h
diff -r /tmp/schily-2019-08-13//printf/printf.1 ./printf/printf.1
28c28
< .TH printf 1 "%e%" "J\*org Schilling" "User Commands"
---
> .TH printf 1 "2017/11/21" "J\*org Schilling" "User Commands"
diff -r /tmp/schily-2019-08-13//psmake/MAKE-sh ./psmake/MAKE-sh
2c2
< #ident "@(#)MAKE-sh	1.25 19/02/10 "
---
> #ident "@(#)MAKE-sh	1.27 19/09/07 "
17a18
> 	    echo "	-shell path	Force 'path' as shell for a 'configure' run"
30a32,42
> 	-shell)
> 	    shift
> 	    if [ $# -lt 1 ]; then
> 		echo "Missing argument to -shell"
> 		$0 -help
> 		exit
> 	    fi
> 	    CONFIG_SHELL="$1"
> 	    shift
> 	    continue;;
> 
196a209
> echo "CONFIG_SHELL:	${CONFIG_SHELL-sh}"
207c220,221
< 		eval CC=$CC CFLAGS=$CF CONFIG_NOFAIL=TRUE sh ./configure
---
> 		eval CC=$CC CFLAGS=$CF CONFIG_NOFAIL=TRUE \
> 		  CONFIG_SHELL=${CONFIG_SHELL-sh} ${CONFIG_SHELL-sh} ./configure
209c223,224
< 		eval CC=$CC CONFIG_NOFAIL=TRUE sh ./configure
---
> 		eval CC=$CC CONFIG_NOFAIL=TRUE \
> 		  CONFIG_SHELL=${CONFIG_SHELL-sh} ${CONFIG_SHELL-sh} ./configure
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//psmake/include und ./psmake/include
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//psmake/include/schily und ./psmake/include/schily
diff -r /tmp/schily-2019-08-13//rscsi/Makefile.man ./rscsi/Makefile.man
1c1
< #ident %W% %E% %Q%
---
> #ident @(#)Makefile.man	1.1 06/02/08 
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/man und ./sccs/man
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs und ./sccs/sccs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sgs und ./sccs/sgs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests und ./sccs/tests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/cmd und ./sccs/sccs/cmd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/hdr und ./sccs/sccs/hdr
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/help.d und ./sccs/sccs/help.d
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib und ./sccs/sccs/lib
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/cmd/src und ./sccs/sccs/cmd/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/cmd/xpg4 und ./sccs/sccs/cmd/xpg4
diff -r /tmp/schily-2019-08-13//sccs/sccs/cmd/src/admin.c ./sccs/sccs/cmd/src/admin.c
32c32
<  * @(#)admin.c	1.123 19/05/12 J. Schilling
---
>  * @(#)admin.c	1.124 19/09/23 J. Schilling
35c35
< #pragma ident "@(#)admin.c 1.123 19/05/12 J. Schilling"
---
> #pragma ident "@(#)admin.c 1.124 19/09/23 J. Schilling"
1681c1681
< 					file, (intmax_t)++nline);
---
> 					file, (Intmax_t)++nline);
1721c1721
< 			 file, (intmax_t)nline);
---
> 			 file, (Intmax_t)nline);
1803c1803
< 		file, (intmax_t)nline);
---
> 		file, (Intmax_t)nline);
diff -r /tmp/schily-2019-08-13//sccs/sccs/cmd/src/delta.c ./sccs/sccs/cmd/src/delta.c
30c30
<  * Copyright 2006-2018 J. Schilling
---
>  * Copyright 2006-2019 J. Schilling
32c32
<  * @(#)delta.c	1.85 18/12/17 J. Schilling
---
>  * @(#)delta.c	1.86 19/09/23 J. Schilling
35c35
< #pragma ident "@(#)delta.c 1.85 18/12/17 J. Schilling"
---
> #pragma ident "@(#)delta.c 1.86 19/09/23 J. Schilling"
1598c1598
< 				file, (intmax_t)++nline);
---
> 				file, (Intmax_t)++nline);
1630c1630
< 		      file, (intmax_t)nline);
---
> 		      file, (Intmax_t)nline);
1686c1686
< 		file, (intmax_t)nline);
---
> 		file, (Intmax_t)nline);
diff -r /tmp/schily-2019-08-13//sccs/sccs/cmd/src/diff.c ./sccs/sccs/cmd/src/diff.c
39c39
<  * Copyright 2006-2018 J. Schilling
---
>  * Copyright 2006-2019 J. Schilling
41c41
<  * @(#)diff.c	1.73 18/12/17 J. Schilling
---
>  * @(#)diff.c	1.75 19/09/16 J. Schilling
44c44
< #pragma ident "@(#)diff.c 1.73 18/12/17 J. Schilling"
---
> #pragma ident "@(#)diff.c 1.75 19/09/16 J. Schilling"
2309c2309,2315
< 	(void) close(f1); (void) close(f2);
---
> 	/*
> 	 * Check values, it may be directories that we dod not open.
> 	 */
> 	if (f1 >= 0)
> 		(void) close(f1);
> 	if (f2 >= 0)
> 		(void) close(f2);
2476c2482
< #ifdef	S_IFPORT
---
> #if defined(S_IFPORT) && S_IFPORT != S_IFIFO	/* Do not use it on Ultrix */
diff -r /tmp/schily-2019-08-13//sccs/sccs/cmd/src/sccslog.c ./sccs/sccs/cmd/src/sccslog.c
10c10,22
< /*@@C@@*/
---
> /*
>  * The contents of this file are subject to the terms of the
>  * Common Development and Distribution License, Version 1.0 only
>  * (the "License").  You may not use this file except in compliance
>  * with the License.
>  *
>  * See the file CDDL.Schily.txt in this distribution for details.
>  * A copy of the CDDL is also available via the Internet at
>  * http://www.opensource.org/licenses/cddl1.txt
>  *
>  * When distributing Covered Code, include this CDDL HEADER in each
>  * file and include the License file CDDL.Schily.txt from this distribution.
>  */
diff -r /tmp/schily-2019-08-13//sccs/sccs/hdr/defines.h ./sccs/sccs/hdr/defines.h
30c30
<  * Copyright 2006-2018 J. Schilling
---
>  * Copyright 2006-2019 J. Schilling
32c32
<  * @(#)defines.h	1.110 18/12/16 J. Schilling
---
>  * @(#)defines.h	1.111 19/09/01 J. Schilling
37c37
< #pragma ident "@(#)defines.h 1.110 18/12/16 J. Schilling"
---
> #pragma ident "@(#)defines.h 1.111 19/09/01 J. Schilling"
509c509
< 	uint16_t *p_hash;	/* ptr to array of checksums */
---
> 	UInt16_t *p_hash;	/* ptr to array of checksums */
diff -r /tmp/schily-2019-08-13//sccs/sccs/hdr/version.h ./sccs/sccs/hdr/version.h
1c1
< /* @(#)version.h	1.34 19/01/02 Copyright 2007-2019 J. Schilling */
---
> /* @(#)version.h	1.35 19/09/18 Copyright 2007-2019 J. Schilling */
16c16
< #define	VDATE	"2019/01/02"
---
> #define	VDATE	"2019/09/18"
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib/cassi und ./sccs/sccs/lib/cassi
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib/comobj und ./sccs/sccs/lib/comobj
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib/mpwlib und ./sccs/sccs/lib/mpwlib
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib/cassi/src und ./sccs/sccs/lib/cassi/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib/comobj/src und ./sccs/sccs/lib/comobj/src
diff -r /tmp/schily-2019-08-13//sccs/sccs/lib/comobj/src/sidext_ab.c ./sccs/sccs/lib/comobj/src/sidext_ab.c
13c13
<  * @(#)sidext_ab.c	1.1 11/09/02 Copyright 2011 J. Schilling
---
>  * @(#)sidext_ab.c	1.2 19/09/01 Copyright 2011-2019 J. Schilling
16c16
< #pragma ident "@(#)sidext_ab.c	1.1 11/09/02 Copyright 2011 J. Schilling"
---
> #pragma ident "@(#)sidext_ab.c	1.2 19/09/01 Copyright 2011-2019 J. Schilling"
36c36
< 			pkt->p_hash = (uint16_t *)
---
> 			pkt->p_hash = (UInt16_t *)
38c38
< 				sizeof(uint16_t))));
---
> 				sizeof(UInt16_t))));
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sccs/lib/mpwlib/src und ./sccs/sccs/lib/mpwlib/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sgs/inc und ./sccs/sgs/inc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/sgs/inc/common und ./sccs/sgs/inc/common
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/common und ./sccs/tests/common
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests und ./sccs/tests/cssctests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests und ./sccs/tests/sccstests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/common/SCCS und ./sccs/tests/common/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/SCCS und ./sccs/tests/cssctests/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/admin und ./sccs/tests/cssctests/admin
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/binary und ./sccs/tests/cssctests/binary
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/bsd-sccs und ./sccs/tests/cssctests/bsd-sccs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/cdc und ./sccs/tests/cssctests/cdc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/delta und ./sccs/tests/cssctests/delta
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/get und ./sccs/tests/cssctests/get
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/initial und ./sccs/tests/cssctests/initial
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/large und ./sccs/tests/cssctests/large
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prs und ./sccs/tests/cssctests/prs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prt und ./sccs/tests/cssctests/prt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/rmdel und ./sccs/tests/cssctests/rmdel
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/sact und ./sccs/tests/cssctests/sact
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/sccsdiff und ./sccs/tests/cssctests/sccsdiff
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/unget und ./sccs/tests/cssctests/unget
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/val und ./sccs/tests/cssctests/val
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/what und ./sccs/tests/cssctests/what
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/year-2000 und ./sccs/tests/cssctests/year-2000
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/admin/SCCS und ./sccs/tests/cssctests/admin/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/binary/SCCS und ./sccs/tests/cssctests/binary/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/bsd-sccs/SCCS und ./sccs/tests/cssctests/bsd-sccs/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/cdc/SCCS und ./sccs/tests/cssctests/cdc/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/delta/SCCS und ./sccs/tests/cssctests/delta/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/delta/test und ./sccs/tests/cssctests/delta/test
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/get/SCCS und ./sccs/tests/cssctests/get/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/get/test und ./sccs/tests/cssctests/get/test
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/initial/SCCS und ./sccs/tests/cssctests/initial/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/large/SCCS und ./sccs/tests/cssctests/large/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prs/SCCS und ./sccs/tests/cssctests/prs/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prt/SCCS und ./sccs/tests/cssctests/prt/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prt/expected und ./sccs/tests/cssctests/prt/expected
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prt/inputs und ./sccs/tests/cssctests/prt/inputs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prt/expected/SCCS und ./sccs/tests/cssctests/prt/expected/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/prt/inputs/SCCS und ./sccs/tests/cssctests/prt/inputs/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/rmdel/SCCS und ./sccs/tests/cssctests/rmdel/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/sact/SCCS und ./sccs/tests/cssctests/sact/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/sccsdiff/SCCS und ./sccs/tests/cssctests/sccsdiff/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/unget/SCCS und ./sccs/tests/cssctests/unget/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/val/SCCS und ./sccs/tests/cssctests/val/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/what/SCCS und ./sccs/tests/cssctests/what/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/cssctests/year-2000/SCCS und ./sccs/tests/cssctests/year-2000/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/SCCS und ./sccs/tests/sccstests/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/admin und ./sccs/tests/sccstests/admin
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/binary und ./sccs/tests/sccstests/binary
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/cdc und ./sccs/tests/sccstests/cdc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/comb und ./sccs/tests/sccstests/comb
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/delta und ./sccs/tests/sccstests/delta
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/extensions und ./sccs/tests/sccstests/extensions
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/format und ./sccs/tests/sccstests/format
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/get und ./sccs/tests/sccstests/get
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/help und ./sccs/tests/sccstests/help
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/initial und ./sccs/tests/sccstests/initial
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/large und ./sccs/tests/sccstests/large
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/prs und ./sccs/tests/sccstests/prs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/prt und ./sccs/tests/sccstests/prt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/random und ./sccs/tests/sccstests/random
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/rmdel und ./sccs/tests/sccstests/rmdel
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sact und ./sccs/tests/sccstests/sact
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccs und ./sccs/tests/sccstests/sccs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccscvt und ./sccs/tests/sccstests/sccscvt
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccsdiff und ./sccs/tests/sccstests/sccsdiff
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccslog und ./sccs/tests/sccstests/sccslog
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/unget und ./sccs/tests/sccstests/unget
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/val und ./sccs/tests/sccstests/val
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/what und ./sccs/tests/sccstests/what
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/year-2000 und ./sccs/tests/sccstests/year-2000
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/admin/SCCS und ./sccs/tests/sccstests/admin/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/binary/SCCS und ./sccs/tests/sccstests/binary/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/cdc/SCCS und ./sccs/tests/sccstests/cdc/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/comb/SCCS und ./sccs/tests/sccstests/comb/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/delta/SCCS und ./sccs/tests/sccstests/delta/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/extensions/SCCS und ./sccs/tests/sccstests/extensions/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/format/SCCS und ./sccs/tests/sccstests/format/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/get/SCCS und ./sccs/tests/sccstests/get/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/help/SCCS und ./sccs/tests/sccstests/help/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/initial/SCCS und ./sccs/tests/sccstests/initial/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/large/SCCS und ./sccs/tests/sccstests/large/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/prs/SCCS und ./sccs/tests/sccstests/prs/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/prt/SCCS und ./sccs/tests/sccstests/prt/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/rmdel/SCCS und ./sccs/tests/sccstests/rmdel/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sact/SCCS und ./sccs/tests/sccstests/sact/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccs/SCCS und ./sccs/tests/sccstests/sccs/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccscvt/SCCS und ./sccs/tests/sccstests/sccscvt/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccsdiff/SCCS und ./sccs/tests/sccstests/sccsdiff/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/sccslog/SCCS und ./sccs/tests/sccstests/sccslog/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/unget/SCCS und ./sccs/tests/sccstests/unget/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/val/SCCS und ./sccs/tests/sccstests/val/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/what/SCCS und ./sccs/tests/sccstests/what/SCCS
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sccs/tests/sccstests/year-2000/SCCS und ./sccs/tests/sccstests/year-2000/SCCS
diff -r /tmp/schily-2019-08-13//sh/Makefile ./sh/Makefile
1c1
< #ident "@(#)Makefile	1.155 19/06/11  Copyright (c) 2006-2018 J. Schilling"
---
> #ident "@(#)Makefile	1.156 19/09/28  Copyright (c) 2006-2019 J. Schilling"
73a74
> CPPOPTS +=	-DDO_DOL_SLASH		# Include support for $/
diff -r /tmp/schily-2019-08-13//sh/bltin.c ./sh/bltin.c
41c41
<  * @(#)bltin.c	1.139 19/03/27 2008-2019 J. Schilling
---
>  * @(#)bltin.c	1.140 19/08/27 2008-2019 J. Schilling
45c45
< 	"@(#)bltin.c	1.139 19/03/27 2008-2019 J. Schilling";
---
> 	"@(#)bltin.c	1.140 19/08/27 2008-2019 J. Schilling";
1282c1282
< 	 * may be to late to go back.
---
> 	 * may be too late to go back.
diff -r /tmp/schily-2019-08-13//sh/ctype.c ./sh/ctype.c
33c33
<  * This file contains modifications Copyright 2009-2016 J. Schilling
---
>  * Copyright 2009-2019 J. Schilling
35c35
<  * @(#)ctype.c	1.6 16/01/14 2009-2016 J. Schilling
---
>  * @(#)ctype.c	1.7 19/09/28 2009-2019 J. Schilling
39c39
< 	"@(#)ctype.c	1.6 16/01/14 2009-2016 J. Schilling";
---
> 	"@(#)ctype.c	1.7 19/09/28 2009-2019 J. Schilling";
117c117
< 	0,	0,	_AST,	_PLS,	0,	_MIN,	0,	0,
---
> 	0,	0,	_AST,	_PLS,	0,	_MIN,	0,	_SLA,
diff -r /tmp/schily-2019-08-13//sh/ctype.h ./sh/ctype.h
30,31c30,32
<  * This file contains modifications Copyright 2009-2016 J. Schilling
<  * @(#)ctype.h	1.9 16/06/09 2009-2016 J. Schilling
---
>  * Copyright 2009-2019 J. Schilling
>  *
>  * @(#)ctype.h	1.10 19/09/28 2009-2019 J. Schilling
90a92,96
> #ifdef	DO_DOL_SLASH
> #define	_SLA	(T_SHN)			/* '/'		*/
> #else
> #define	_SLA	(0)			/* '/'		*/
> #endif
diff -r /tmp/schily-2019-08-13//sh/defs.h ./sh/defs.h
42c42
<  * @(#)defs.h	1.203 19/06/18 2008-2019 J. Schilling
---
>  * @(#)defs.h	1.204 19/09/16 2008-2019 J. Schilling
418a419
> extern int		optopt;
Nur in ./sh: dotfiles.sh.tar.bz2
Nur in /tmp/schily-2019-08-13//sh: dotfiles.tar.bz2
diff -r /tmp/schily-2019-08-13//sh/expand.c ./sh/expand.c
39c39
<  * @(#)expand.c	1.28 19/06/10 2008-2019 J. Schilling
---
>  * @(#)expand.c	1.29 19/09/25 2008-2019 J. Schilling
43c43
< 	"@(#)expand.c	1.28 19/06/10 2008-2019 J. Schilling";
---
> 	"@(#)expand.c	1.29 19/09/25 2008-2019 J. Schilling";
70c70,71
< static void	addg	__PR((unsigned char *, unsigned char *, unsigned char *,
---
> static void	addg	__PR((unsigned char *, unsigned char *,
> 			    unsigned char *,
238c239,240
< 			if (name[name[0] != '.' ? 0 : name[1] != '.' ? 1 : 2] == '\0')
---
> 			if (name[name[0] != '.' ? 0 :
> 			    name[1] != '.' ? 1 : 2] == '\0')
diff -r /tmp/schily-2019-08-13//sh/io.c ./sh/io.c
41c41
<  * @(#)io.c	1.42 19/01/12 2008-2019 J. Schilling
---
>  * @(#)io.c	1.44 19/09/25 2008-2019 J. Schilling
45c45
< 	"@(#)io.c	1.42 19/01/12 2008-2019 J. Schilling";
---
> 	"@(#)io.c	1.44 19/09/25 2008-2019 J. Schilling";
253c253
< 		 * We currently only have a highly compley testcase that
---
> 		 * We currently only have a highly complex testcase that
411a412
> 	struct tempblk	tb;
412a414,415
> 	if ((iop = ioparg) == NULL)
> 		return;
414,421c417,422
< 	if ((iop = ioparg) != NULL) {
< 		struct tempblk tb;
< 		copy(iop->iolst);
< 		ends = mactrim((unsigned char *)iop->ioname);
< 		stripflg = iop->iofile & IOSTRIP;
< 		if (nosubst)
< 			iop->iofile &= ~IODOC_SUBST;
< 		fd = tmpfil(&tb);
---
> 	copy(iop->iolst);
> 	ends = mactrim((unsigned char *)iop->ioname);
> 	stripflg = iop->iofile & IOSTRIP;
> 	if (nosubst)
> 		iop->iofile &= ~IODOC_SUBST;
> 	fd = tmpfil(&tb);
423,426c424,427
< 		if (fndef)
< 			iop->ioname = (char *)make(tmpout);
< 		else
< 			iop->ioname = (char *)cpystak(tmpout);
---
> 	if (fndef)
> 		iop->ioname = (char *)make(tmpout);
> 	else
> 		iop->ioname = (char *)cpystak(tmpout);
428,429c429,430
< 		iop->iolst = iotemp;
< 		iotemp = iop;
---
> 	iop->iolst = iotemp;
> 	iotemp = iop;
431,436c432,447
< 		cline = clinep = start = locstak();
< 		poff = 0;
< 		if (stripflg) {
< 			iop->iofile &= ~IOSTRIP;
< 			while (*ends == '\t')
< 				ends++;
---
> 	cline = clinep = start = locstak();
> 	poff = 0;
> 	if (stripflg) {
> 		iop->iofile &= ~IOSTRIP;
> 		while (*ends == '\t')
> 			ends++;
> 	}
> 	for (;;) {
> 		staktop = &clinep[1];
> 		chkpr();
> 		if (stakbot != start) {
> 			poff = stakbot - start;
> 			start += poff;
> 			cline += poff;
> 			clinep += poff;
> 			poff = 0;
438,460c449,453
< 		for (;;) {
< 			staktop = &clinep[1];
< 			chkpr();
< 			if (stakbot != start) {
< 				poff = stakbot - start;
< 				start += poff;
< 				cline += poff;
< 				clinep += poff;
< 				poff = 0;
< 			}
< 			staktop = start;
< 			if (nosubst) {
< 				c = readwc();
< 				if (stripflg)
< 					while (c == '\t')
< 						c = readwc();
< 
< 				while (!eolchar(c)) {
< 					pc = readw(c);
< 					while (*pc) {
< 						GROWSTAK2(clinep, poff);
< 						*clinep++ = *pc++;
< 					}
---
> 		staktop = start;
> 		if (nosubst) {
> 			c = readwc();
> 			if (stripflg)
> 				while (c == '\t')
461a455,460
> 
> 			while (!eolchar(c)) {
> 				pc = readw(c);
> 				while (*pc) {
> 					GROWSTAK2(clinep, poff);
> 					*clinep++ = *pc++;
463,467c462,468
< 			} else {
< 				c = nextwc();
< 				if (stripflg)
< 					while (c == '\t')
< 						c = nextwc();
---
> 				c = readwc();
> 			}
> 		} else {
> 			c = nextwc();
> 			if (stripflg)
> 				while (c == '\t')
> 					c = nextwc();
469,484c470,480
< 				while (!eolchar(c)) {
< 					pc = readw(c);
< 					while (*pc) {
< 						GROWSTAK2(clinep, poff);
< 						*clinep++ = *pc++;
< 					}
< 					if (c == '\\') {
< 						pc = readw(readwc());
< 						/* *pc might be NULL */
< 						/* BEGIN CSTYLED */
< 						if (*pc) {
< 							while (*pc) {
< 								GROWSTAK2(clinep, poff);
< 								*clinep++ = *pc++;
< 							}
< 						} else {
---
> 			while (!eolchar(c)) {
> 				pc = readw(c);
> 				while (*pc) {
> 					GROWSTAK2(clinep, poff);
> 					*clinep++ = *pc++;
> 				}
> 				if (c == '\\') {
> 					pc = readw(readwc());
> 					/* *pc might be NULL */
> 					if (*pc) {
> 						while (*pc) {
486c482
< 							*clinep++ = *pc;
---
> 							*clinep++ = *pc++;
488c484,486
< 						/* END CSTYLED */
---
> 					} else {
> 						GROWSTAK2(clinep, poff);
> 						*clinep++ = *pc;
490d487
< 					c = nextwc();
491a489
> 				c = nextwc();
492a491
> 		}
493a493,505
> 		GROWSTAK2(clinep, poff);
> 		*clinep = 0;
> 		if (poff) {
> 			cline += poff;
> 			start += poff;
> 			poff = 0;
> 		}
> 		if (eof || eq(cline, ends)) {
> 			if ((i = cline - start) > 0)
> 				if (write(fd, start, i) != i)
> 					break;
> 			break;
> 		} else {
495c507
< 			*clinep = 0;
---
> 			*clinep++ = NL;
501,522d512
< 			if (eof || eq(cline, ends)) {
< 				if ((i = cline - start) > 0)
< 					if (write(fd, start, i) != i)
< 						break;
< 				break;
< 			} else {
< 				GROWSTAK2(clinep, poff);
< 				*clinep++ = NL;
< 				if (poff) {
< 					cline += poff;
< 					start += poff;
< 					poff = 0;
< 				}
< 			}
< 
< 			if ((i = clinep - start) < CPYSIZ) {
< 				cline = clinep;
< 			} else {
< 				if (write(fd, start, i) != i)
< 					break;
< 				cline = clinep = start;
< 			}
525,529c515,521
< 		/*
< 		 * Pushed in tmpfil -- bug fix for problem
< 		 * deleting in-line script.
< 		 */
< 		poptemp();
---
> 		if ((i = clinep - start) < CPYSIZ) {
> 			cline = clinep;
> 		} else {
> 			if (write(fd, start, i) != i)
> 				break;
> 			cline = clinep = start;
> 		}
530a523,528
> 
> 	/*
> 	 * Pushed in tmpfil -- bug fix for problem
> 	 * deleting in-line script.
> 	 */
> 	poptemp();
diff -r /tmp/schily-2019-08-13//sh/macro.c ./sh/macro.c
38c38
<  * Copyright 2008-2018 J. Schilling
---
>  * Copyright 2008-2019 J. Schilling
40c40
<  * @(#)macro.c	1.92 18/10/09 2008-2018 J. Schilling
---
>  * @(#)macro.c	1.94 19/09/28 2008-2019 J. Schilling
44c44
< 	"@(#)macro.c	1.92 18/10/09 2008-2018 J. Schilling";
---
> 	"@(#)macro.c	1.94 19/09/28 2008-2019 J. Schilling";
454a455,467
> #ifdef	DO_DOL_SLASH
> 			} else if (c == '/') {
> 				if (retex.ex_code == CLD_EXITED) {
> 					sitos(retex.ex_status);
> 					v = numbuf;
> 				} else if (retex.ex_code == C_NOEXEC ||
> 					    retex.ex_code == C_NOTFOUND) {
> 					v = UC code2str(retex.ex_code);
> 				} else {
> 					sig2str(retex.ex_status, (char *)numbuf);
> 			                v = numbuf;
> 				}
> #endif
499c512
< 				 * mark the word as expandet, but before, we
---
> 				 * mark the word as expanded, but before, we
1140c1153
< 	int		largest;	/* Whether to match larges str.	*/
---
> 	int		largest;	/* Whether to match largest str	*/
1202c1215
< 	int		largest;	/* Whether to match larges str.	*/
---
> 	int		largest;	/* Whether to match largest str	*/
diff -r /tmp/schily-2019-08-13//sh/name.c ./sh/name.c
41c41
<  * @(#)name.c	1.78 19/06/18 2008-2019 J. Schilling
---
>  * @(#)name.c	1.79 19/08/27 2008-2019 J. Schilling
45c45
< 	"@(#)name.c	1.78 19/06/18 2008-2019 J. Schilling";
---
> 	"@(#)name.c	1.79 19/08/27 2008-2019 J. Schilling";
631c631
< 	 * strip leading IFS white characters
---
> 	 * strip leading IFS white space characters
1228c1228
<  * The allocated memory is free()d before starting the mext command.
---
>  * The allocated memory is free()d before starting the next command.
diff -r /tmp/schily-2019-08-13//sh/print.c ./sh/print.c
39c39
<  * @(#)print.c	1.43 19/04/08 2008-2019 J. Schilling
---
>  * @(#)print.c	1.44 19/08/27 2008-2019 J. Schilling
46c46
< 	"@(#)print.c	1.43 19/04/08 2008-2019 J. Schilling";
---
> 	"@(#)print.c	1.44 19/08/27 2008-2019 J. Schilling";
518c518
< 		err++;
---
> 		err = TRUE;
569c569
< 			err++;
---
> 			err = TRUE;
diff -r /tmp/schily-2019-08-13//sh/printf.c ./sh/printf.c
1c1
< /* @(#)printf.c	1.17 18/09/08 Copyright 2015-2018 J. Schilling */
---
> /* @(#)printf.c	1.19 19/08/29 Copyright 2015-2019 J. Schilling */
14c14
<  *	Copyright (c) 2015-2018 J. Schilling
---
>  *	Copyright (c) 2015-2019 J. Schilling
29a30,32
> #ifndef	BOURNE_SHELL
> #include <defs.h>	/* Allow local defs.h for standalone printf via -I. */
> #else
30a34
> #endif
34c38
< 	"@(#)printf.c	1.17 18/09/08 Copyright 2015-2018 J. Schilling";
---
> 	"@(#)printf.c	1.19 19/08/29 Copyright 2015-2019 J. Schilling";
450c454
< 			for (; p < cp; ) {
---
> 			while (p < cp) {
648a653,655
> #ifdef	HAVE_PRINTF_A
> 			case 'a': case 'A':
> #endif
diff -r /tmp/schily-2019-08-13//sh/sh.1 ./sh/sh.1
2c2
< .\" @(#)sh.1	1.244 19/06/11 Copyright 2012-2019 J. Schilling
---
> .\" @(#)sh.1	1.245 19/09/28 Copyright 2012-2019 J. Schilling
62c62
< .TH sh 1 "2019/06/11" "Schily Bourne Shell" "User Commands"
---
> .TH sh 1 "2019/09/28" "Schily Bourne Shell" "User Commands"
1732,1734c1732,1741
< If the executable file could not be found, the returned value is 127.
< If the file exists but could not be executed, the returned value is 126.
< If a command's exit code modulo 256 is zero and
---
> If the executable file could not be found, the returned value is
> .BR 127 .
> If the file exists but could not be executed, the returned value is
> .BR 126 .
> If
> .B bosh
> has been compiled with
> .B DO_EXIT_MODFIX
> (which is not the default and not recommended by POSIX) and
> if a command's exit code modulo 256 is zero and
1743a1751,1799
> .B /
> A decimal number or a text indicating the exit status 
> returned by the last synchronously executed command.
> .sp
> If
> .B $/
> returns a decimal number, this is (on a POSIX system) the 32 bit
> exit code from the last command that did normally exit. Older non-POSIX
> systems like Linux return only the low 8 bits from the exit code.
> .sp
> If
> .B $/
> returns text, this is either a signal name like
> .RB `` INT ''
> (see kill -l) for the signal
> that terminated the program or one of the strings
> .RB `` NOEXEC ''
> or
> .RB `` NOTFOUND ''
> in case the program could not be run at all.
> Note that currently, the strings
> .RB `` NOEXEC ''
> and
> .RB `` NOTFOUND ''
> are only returned from
> .BR vfork (2)
> childs or when the related state is already known by the cache, in other cases
> .B $/
> returns
> .B 126
> or
> .B 127
> as with
> .BR $? .
> The string values currently cannot be passed back from a subshell.
> .sp
> Note that unless
> .RB `` "set\ \-o\ fullexitcode" ''
> is in effect,
> .B $/
> may have a
> .IB value " mod 256 == 0" 
> and the shell in such a case evaluates conditional execution as if the
> exit code was zero.
> This is the default behavior required by POSIX for compatibility with historic
> shells.
> .br
> .ne 3
> .TP
5756a5813,5817
> Setting
> .B fullexitcode
> is needed to evaluate
> .IB exitcode " mod 256 == 0"
> in conditional expressions as non-zero exit code.
diff -r /tmp/schily-2019-08-13//sh/test.c ./sh/test.c
41c41
<  * @(#)test.c	1.42 19/01/09 2008-2019 J. Schilling
---
>  * @(#)test.c	1.43 19/09/16 2008-2019 J. Schilling
45c45
< 	"@(#)test.c	1.42 19/01/09 2008-2019 J. Schilling";
---
> 	"@(#)test.c	1.43 19/09/16 2008-2019 J. Schilling";
588c588,589
< #ifdef	S_IFPORT
---
> #if defined(S_IFPORT) && S_IFPORT != S_IFIFO	/* Do not use it on Ultrix */
> 
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests und ./sh/tests
diff -r /tmp/schily-2019-08-13//sh/version.h ./sh/version.h
1c1
< /* @(#)version.h	1.83 19/07/23 Copyright 2012-2019 J. Schilling */
---
> /* @(#)version.h	1.85 19/09/27 Copyright 2012-2019 J. Schilling */
20c20
< #define	VERSION_DATE	"2019/07/23"
---
> #define	VERSION_DATE	"2019/09/27"
diff -r /tmp/schily-2019-08-13//sh/word.c ./sh/word.c
41c41
<  * @(#)word.c	1.98 19/05/19 2008-2019 J. Schilling
---
>  * @(#)word.c	1.101 19/08/25 2008-2019 J. Schilling
45c45
< 	"@(#)word.c	1.98 19/05/19 2008-2019 J. Schilling";
---
> 	"@(#)word.c	1.101 19/08/25 2008-2019 J. Schilling";
104a105
> #ifdef	DO_SYSALIAS
105a107
> #endif
132a135
> #ifdef	DO_SYSALIAS
140a144
> #endif
753c757
< 				if (len == 0)
---
> 				if (len <= 0)
819c823
< 	int	len;
---
> 	int	len = 0;
835c839
< 			 * a bondary of multibyte char.
---
> 			 * a boundary of multibyte char.
841a846
> 	errno = 0;
842a848,854
> 		if (len < 0 && errno != EINTR) {
> 			/*
> 			 * Avoid a loop on EIO and similar read errors.
> 			 * This may happen afte a shut down TCP/IP connection.
> 			 */
> 			break;
> 		}
906a919,924
>  * We only check for a binary file if the fileblk seems to be just
>  * initialized as we do not want to repeat the test in case that
>  * exfile() is called again with the same file. Since a shut down TCP/IP
>  * conection first sends a SIGTERM and then causes EIO on stdin, we need
>  * to be careful not to go into a longjmp() loop from inside readb() to
>  * exfile().
913a932
> 	BOOL		trapsav;
916c935
< 		return (FALSE);
---
> 		return (FALSE);		/* so this is not the first read */
921a941,942
> 	trapsav = trapnote;
> 	trapnote = 0;			/* Avoid endless longjmp() loop */
922a944
> 	trapnote |= trapsav;		/* Keep signals just seen */
927c949
< 	for (p = f->fnxt; p <= f->fend; p++) {
---
> 	for (p = f->fnxt; p < f->fend; p++) {
984a1007
> 				errno = EINTR;		/* Mark for readb() */
diff -r /tmp/schily-2019-08-13//sh/xec.c ./sh/xec.c
41c41
<  * @(#)xec.c	1.110 19/06/12 2008-2019 J. Schilling
---
>  * @(#)xec.c	1.111 19/09/27 2008-2019 J. Schilling
45c45
< 	"@(#)xec.c	1.110 19/06/12 2008-2019 J. Schilling";
---
> 	"@(#)xec.c	1.111 19/09/27 2008-2019 J. Schilling";
707c707
< 						} else {
---
> 						} else if (exflag != 0) {
708a709,710
> 							ex.ex_status =
> 							ex.ex_code = C_NOEXEC;
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/common und ./sh/tests/common
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests und ./sh/tests/shelltests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/alias und ./sh/tests/shelltests/alias
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/arg und ./sh/tests/shelltests/arg
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/arith und ./sh/tests/shelltests/arith
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/bltin und ./sh/tests/shelltests/bltin
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/break und ./sh/tests/shelltests/break
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/bugs und ./sh/tests/shelltests/bugs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/cmdsub und ./sh/tests/shelltests/cmdsub
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/conf und ./sh/tests/shelltests/conf
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/echo und ./sh/tests/shelltests/echo
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/errflg und ./sh/tests/shelltests/errflg
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/error und ./sh/tests/shelltests/error
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/exec und ./sh/tests/shelltests/exec
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/exit und ./sh/tests/shelltests/exit
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/getopts und ./sh/tests/shelltests/getopts
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/glob und ./sh/tests/shelltests/glob
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/here und ./sh/tests/shelltests/here
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/ifs und ./sh/tests/shelltests/ifs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/local und ./sh/tests/shelltests/local
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/misc und ./sh/tests/shelltests/misc
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/parameter und ./sh/tests/shelltests/parameter
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/pipe und ./sh/tests/shelltests/pipe
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/printf und ./sh/tests/shelltests/printf
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/quoting und ./sh/tests/shelltests/quoting
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/redir und ./sh/tests/shelltests/redir
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/return und ./sh/tests/shelltests/return
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/set und ./sh/tests/shelltests/set
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/syntax und ./sh/tests/shelltests/syntax
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/test und ./sh/tests/shelltests/test
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/tilde und ./sh/tests/shelltests/tilde
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sh/tests/shelltests/trap und ./sh/tests/shelltests/trap
diff -r /tmp/schily-2019-08-13//star/Makefile.doc ./star/Makefile.doc
1c1
< #ident "%W% %E% %Q%"
---
> #ident "@(#)Makefile.doc	1.1 07/06/10 "
diff -r /tmp/schily-2019-08-13//star/Makefile.man ./star/Makefile.man
1c1
< #ident %W% %E% %Q%
---
> #ident @(#)Makefile.man	1.1 00/11/09 
diff -r /tmp/schily-2019-08-13//star/create.c ./star/create.c
1c1
< /* @(#)create.c	1.157 19/07/04 Copyright 1985, 1995, 2001-2019 J. Schilling */
---
> /* @(#)create.c	1.158 19/08/20 Copyright 1985, 1995, 2001-2019 J. Schilling */
5c5
< 	"@(#)create.c	1.157 19/07/04 Copyright 1985, 1995, 2001-2019 J. Schilling";
---
> 	"@(#)create.c	1.158 19/08/20 Copyright 1985, 1995, 2001-2019 J. Schilling";
1974a1975,1976
> 		if (nomount && newfs(&finfo))
> 			return (0);
diff -r /tmp/schily-2019-08-13//star/defaults.c ./star/defaults.c
1c1
< /* @(#)defaults.c	1.17 18/07/10 Copyright 1998-2018 J. Schilling */
---
> /* @(#)defaults.c	1.18 19/09/27 Copyright 1998-2019 J. Schilling */
5c5
< 	"@(#)defaults.c	1.17 18/07/10 Copyright 1998-2018 J. Schilling";
---
> 	"@(#)defaults.c	1.18 19/09/27 Copyright 1998-2019 J. Schilling";
8c8
<  *	Copyright (c) 1998-2018 J. Schilling
---
>  *	Copyright (c) 1998-2019 J. Schilling
49a50
> 						BOOL *secure_linkp,
94c95
< star_defaults(fsp, no_fsyncp, dfltname)
---
> star_defaults(fsp, no_fsyncp, secure_linkp, dfltname)
96a98
> 	BOOL	*secure_linkp;
100a103,104
> 	BOOL	securelinks = FALSE;
> 	BOOL	nohint = FALSE;
105a110,112
> 	if (getenv("STAR_NOHINT"))
> 		nohint=TRUE;
> 
167c174,175
< 				if (!silent && !print_artype && xflag && !nflag)
---
> 				if (!silent && !nohint &&
> 				    !print_artype && xflag && !nflag)
179a188,224
> 	if (secure_linkp)
> 		securelinks = *secure_linkp;
> 	if (securelinks < 0) {
> 		char	*p = NULL;
> 		BOOL	was_env = FALSE;
> 
> 		p = getenv("STAR_SECURE_LINKS");
> 		if (p == NULL) {
> 			if (is_open) {
> 				defltfirst();
> 			} else if (open_stardefaults(dfltname) == 0) {
> 				is_open = TRUE;
> 			}
> 			if (is_open)
> 				p = defltread("STAR_SECURE_LINKS=");
> 		} else {
> 			was_env = TRUE;
> 		}
> 		if (p) {
> 			while (*p == ' ' || *p == '\t')
> 				p++;
> 			if (*p == 'n' || *p == 'N') {
> 				securelinks = TRUE;
> 				if (!silent && !nohint &&
> 				    !print_artype && xflag && !nflag)
> 					errmsgno(EX_BAD,
> 					"WARNING: -no-secure-links enabled from '%s'.\n",
> 					was_env ? "environment" :
> 					dfltname);
> 			} else {
> 				securelinks = FALSE;
> 			}
> 		}
> 	}
> 	if (secure_linkp && securelinks >= 0)
> 		*secure_linkp = securelinks;
> 
diff -r /tmp/schily-2019-08-13//star/star.1 ./star/star.1
1c1
< . \" @(#)star.1	1.219 19/06/16 Copyr 1982-2019 J. Schilling
---
> . \" @(#)star.1	1.223 19/09/27 Copyr 1982-2019 J. Schilling
19c19
< .TH STAR 1 "2019/06/16" "J\*org Schilling" "Schily\'s USER COMMANDS"
---
> .TH STAR 1 "2019/09/27" "J\*org Schilling" "Schily\'s USER COMMANDS"
2989a2990,2998
> See also the option
> .B pkglist=
> for a way to specify
> .BR filename ,
> .BR permission ,
> .B owner
> and
> .BR group .
> .sp
3039a3049,3059
> .sp
> When using
> .BR \-find ,
> this may not always work as expected, e.g. when the
> .B /proc
> filesyestem is involved.
> Use
> .B \-xdev
> past
> .B \-find
> for this reason.
3307c3327
< for ways to configue the default behavior.
---
> for ways to configure the default behavior.
3342c3362,3368
< below.
---
> below and
> .B STAR_SECURE_LINKS
> in
> .B ENVIRONMENT
> and
> .B /etc/default/star
> for ways to configure the default behavior.
3879c3905
< See
---
> See section
3881c3907,3913
< for more information.
---
> for more information and
> .B STAR_SECURE_LINKS
> in
> .B ENVIRONMENT
> and
> .B /etc/default/star
> for ways to configure the default behavior.
4131d4162
< .RE
4141a4173
> .RE
4234a4267,4277
> .sp
> When using
> .BR \-find ,
> this may not always work as expected, e.g. when the
> .B /proc
> filesyestem is involved.
> Use
> .B \-xdev
> past
> .B \-find
> for this reason.
4738a4782,4792
> .B -64 / 192
> An exit code has been used that does not fit into an 8-bit unsigned number
> and the environment
> .B COMERR_EXCODE
> has not been set.
> The value
> .B -64 / 192
> in this case marks a clash.
> .br
> .ne 3
> .TP
5014a5069,5105
> .B COMERR_EXCODE
> If this environment is present, exit codes are not mapped to avoid possible
> clashes with calling programs that use the outdated
> .BR waitpid (2)
> instead of the
> .BR waitid (2)
> call to wait for the exit status from
> .BR star .
> While
> .BR waitid (2)
> returns the full 32 bit exit code,
> .BR waitpid (2)
> masks the exit code with 0377.
> Without the environment
> .BR COMERR_EXCODE ,
> exit codes outside the range
> .B -63\ ..\ 191
> are mapped to
> .BR -64 " (" 192 )
> to mark a clash.
> .sp
> If the environment
> .B COMERR_EXCODE
> is set and the value starts with the character '0', an exitcode code > 0
> that leads to
> .BR "exitcode & 0377 == 0" ,
> is mapped to
> .B -64
> to avoid confusion with shells that use
> .BR waitid (2)
> but interpret these exit codes as zero with respect to conditional execution
> in order to implement compatibility to historical shells.
> .sp
> With a shell that supports the full exitcode on and a POSIX compliant
> operating system, it is recommended to set the environment
> .BR COMERR_EXCODE .
> .TP
5063a5155,5182
> .B STAR_NOHINT
> If this environment is seen, some informative messages are not printed.
> this currently applies to messages related to
> .B STAR_FSYNC
> and
> .BR STAR_SECURE_LINKS .
> .TP
> .B STAR_SECURE_LINKS
> If set to
> .RB ` N ',
> the default behavior of
> .B star
> is as if the
> .B \-no\-secure\-links
> option has always been specified.
> .sp
> This disables checks for potentially insecure links by default.
> .sp
> If you like to make this the default, keep in mind that you need to specify
> .B \-secure\-links
> in case you like to unpack an archive from unknown sources.
> .sp
> The environment
> .B STAR_SECURE_LINKS
> has precedence over
> .B /etc/default/star
> but may still be overwritten by command line options.
> .TP
5210a5330,5333
> This setting is overwritten by the
> .B STAR_FSYNC
> environment, if present.
> .sp
5216a5340,5358
> .B STAR_SECURE_LINKS
> If set to
> .RB ` N ',
> the default behavior of
> .B star
> is as if the
> .B \-no\-secure\-links
> option has always been specified.
> .sp
> This disables checks for potentially insecure links by default.
> .sp
> This setting is overwritten by the
> .B STAR_SECURE_LINKS
> environment, if present.
> .sp
> If you like to make this the default, keep in mind that you need to specify
> .B \-secure\-links
> in case you like to unpack an archive from unknown sources.
> .TP
5331c5473,5475
< .BR fssnap (1m)
---
> .BR fssnap (1m),
> .BR waitid (2),
> .BR waitpid (2)
5648a5793,5798
> .LP
> See the 
> .B ENVIRONMENT
> section and
> .B /etc/default/star
> for ways to configure the default behavior.
diff -r /tmp/schily-2019-08-13//star/star.c ./star/star.c
1c1
< /* @(#)star.c	1.394 19/07/22 Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling */
---
> /* @(#)star.c	1.395 19/09/27 Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling */
5c5
< 	"@(#)star.c	1.394 19/07/22 Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling";
---
> 	"@(#)star.c	1.395 19/09/27 Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling";
1922,1923d1921
< 	if (secure_links < 0)
< 		secure_links = TRUE;
2142c2140
< 	star_defaults(&fs, &no_fsync, NULL);
---
> 	star_defaults(&fs, &no_fsync, &secure_links, NULL);
2144a2143,2144
> 	if (secure_links < 0)
> 		secure_links = TRUE;
diff -r /tmp/schily-2019-08-13//star/star.dfl ./star/star.dfl
1c1
< # @(#)star.dfl	1.4 18/07/10 Copyright 2003-2018 J. Schilling
---
> # @(#)star.dfl	1.6 19/09/27 Copyright 2003-2018 J. Schilling
43a44,52
> # If you are frequently doing administrative work and you know that you do not
> # extract alien tar archives, you may uncomment the following line to tell star
> # to extract potentially insecure links by default. Since this sets a global
> # default, it is recommended to rather use a user specific default via the
> # environment.
> #
> #STAR_SECURE_LINKS=N
> 
> #
diff -r /tmp/schily-2019-08-13//star/star_fat.c ./star/star_fat.c
1c1
< /* @(#)star.c	1.394 19/07/22 Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling */
---
> /* %Z%%M%	%I% %E% Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling */
5c5
< 	"@(#)star.c	1.394 19/07/22 Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling";
---
> 	"%Z%%M%	%I% %E% Copyright 1985, 88-90, 92-96, 98, 99, 2000-2019 J. Schilling";
1922,1923d1921
< 	if (secure_links < 0)
< 		secure_links = TRUE;
2142c2140
< 	star_defaults(&fs, &no_fsync, NULL);
---
> 	star_defaults(&fs, &no_fsync, &secure_links, NULL);
2144a2143,2144
> 	if (secure_links < 0)
> 		secure_links = TRUE;
diff -r /tmp/schily-2019-08-13//star/starsubs.h ./star/starsubs.h
1c1
< /* @(#)starsubs.h	1.136 19/07/07 Copyright 1996-2019 J. Schilling */
---
> /* @(#)starsubs.h	1.137 19/09/27 Copyright 1996-2019 J. Schilling */
480a481
> 						BOOL *secure_linkp,
diff -r /tmp/schily-2019-08-13//star/starvsgnutar.mk ./star/starvsgnutar.mk
1c1
< #ident %W% %E% %Q%
---
> #ident @(#)starvsgnutar.mk	1.1 07/06/10 
diff -r /tmp/schily-2019-08-13//star/suntar.c ./star/suntar.c
1c1
< /* @(#)suntar.c	1.43 19/03/27 Copyright 1989, 2003-2019 J. Schilling */
---
> /* @(#)suntar.c	1.44 19/09/27 Copyright 1989, 2003-2019 J. Schilling */
5c5
< 	"@(#)suntar.c	1.43 19/03/27 Copyright 1989, 2003-2019 J. Schilling";
---
> 	"@(#)suntar.c	1.44 19/09/27 Copyright 1989, 2003-2019 J. Schilling";
257c257
< 	star_defaults(&fs, &no_fsync, DFLT_FILE);
---
> 	star_defaults(&fs, &no_fsync, &secure_links, DFLT_FILE);
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests und ./star/tests
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts und ./star/testscripts
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests/artype und ./star/tests/artype
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests/basic und ./star/tests/basic
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests/common und ./star/tests/common
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests/compress und ./star/tests/compress
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests/incremental und ./star/tests/incremental
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/tests/port und ./star/tests/port
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs und ./star/testscripts/tar-test-inputs
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/file-size und ./star/testscripts/tar-test-inputs/file-size
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/format-acceptance und ./star/testscripts/tar-test-inputs/format-acceptance
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/large-mtime und ./star/testscripts/tar-test-inputs/large-mtime
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/long-paths und ./star/testscripts/tar-test-inputs/long-paths
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/multi-volume und ./star/testscripts/tar-test-inputs/multi-volume
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/negative-mtime und ./star/testscripts/tar-test-inputs/negative-mtime
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/sparse-files und ./star/testscripts/tar-test-inputs/sparse-files
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/user-group-largenum und ./star/testscripts/tar-test-inputs/user-group-largenum
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/user-group-name und ./star/testscripts/tar-test-inputs/user-group-name
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/volume-label und ./star/testscripts/tar-test-inputs/volume-label
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//star/testscripts/tar-test-inputs/xattr und ./star/testscripts/tar-test-inputs/xattr
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make und ./sunpro/Make
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/include und ./sunpro/include
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/bin und ./sunpro/Make/bin
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/include und ./sunpro/Make/include
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib und ./sunpro/Make/lib
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/bin/make und ./sunpro/Make/bin/make
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/bin/make/common und ./sunpro/Make/bin/make/common
diff -r /tmp/schily-2019-08-13//sunpro/Make/bin/make/common/read.cc ./sunpro/Make/bin/make/common/read.cc
36c36
<  * @(#)read.cc	1.23 19/08/12 2017-2019 J. Schilling
---
>  * @(#)read.cc	1.24 19/08/18 2017-2019 J. Schilling
41c41
< 	"@(#)read.cc	1.23 19/08/12 2017-2019 J. Schilling";
---
> 	"@(#)read.cc	1.24 19/08/18 2017-2019 J. Schilling";
223c223,224
< 					if (strstr(run_dir, "xpg4/bin")) {
---
> 					if (strstr(run_dir, "xpg4/bin") ||
> 					    strstr(run_dir, "/onbld/")) {
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/include/bsd und ./sunpro/Make/include/bsd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/include/mk und ./sunpro/Make/include/mk
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/include/mksh und ./sunpro/Make/include/mksh
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/include/vroot und ./sunpro/Make/include/vroot
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/bsd und ./sunpro/Make/lib/bsd
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/makestate und ./sunpro/Make/lib/makestate
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/mksh und ./sunpro/Make/lib/mksh
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/vroot und ./sunpro/Make/lib/vroot
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/bsd/src und ./sunpro/Make/lib/bsd/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/makestate/src und ./sunpro/Make/lib/makestate/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/mksh/src und ./sunpro/Make/lib/mksh/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/Make/lib/vroot/src und ./sunpro/Make/lib/vroot/src
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//sunpro/include/avo und ./sunpro/include/avo
diff -r /tmp/schily-2019-08-13//tartest/tartestman.mk ./tartest/tartestman.mk
1c1
< #ident %W% %E% %Q%
---
> #ident @(#)tartestman.mk	1.1 04/09/27 
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//tests/bin und ./tests/bin
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//tests/testutils und ./tests/testutils
diff -r /tmp/schily-2019-08-13//tests/bin/docommand ./tests/bin/docommand
5c5,15
< #@@C@@
---
> # The contents of this file are subject to the terms of the
> # Common Development and Distribution License, Version 1.0 only
> # (the "License").  You may not use this file except in compliance
> # with the License.
> #
> # See the file CDDL.Schily.txt in this distribution for details.
> # A copy of the CDDL is also available via the Internet at
> # http://www.opensource.org/licenses/cddl1.txt
> #
> # When distributing Covered Code, include this CDDL HEADER in each
> # file and include the License file CDDL.Schily.txt from this distribution.
diff -r /tmp/schily-2019-08-13//tests/bin/misc ./tests/bin/misc
5c5,15
< #@@C@@
---
> # The contents of this file are subject to the terms of the
> # Common Development and Distribution License, Version 1.0 only
> # (the "License").  You may not use this file except in compliance
> # with the License.
> #
> # See the file CDDL.Schily.txt in this distribution for details.
> # A copy of the CDDL is also available via the Internet at
> # http://www.opensource.org/licenses/cddl1.txt
> #
> # When distributing Covered Code, include this CDDL HEADER in each
> # file and include the License file CDDL.Schily.txt from this distribution.
Gemeinsame Unterverzeichnisse: /tmp/schily-2019-08-13//tests/testutils/SCCS und ./tests/testutils/SCCS
diff -r /tmp/schily-2019-08-13//ved/cursorcmds.c ./ved/cursorcmds.c
1c1
< /* @(#)cursorcmds.c	1.34 09/07/09 Copyright 1984-2009 J. Schilling */
---
> /* @(#)cursorcmds.c	1.35 19/09/05 Copyright 1984-2019 J. Schilling */
5c5
< 	"@(#)cursorcmds.c	1.34 09/07/09 Copyright 1984-2009 J. Schilling";
---
> 	"@(#)cursorcmds.c	1.35 19/09/05 Copyright 1984-2019 J. Schilling";
10c10
<  *	Copyright (c) 1984-2009 J. Schilling
---
>  *	Copyright (c) 1984-2019 J. Schilling
606c606
< 	{UC "[]", UC "[[\\]]"},
---
> 	{UC "[]", UC "[\\[\\]]"},
Nur in /tmp/schily-2019-08-13//ved: dotfiles.tar.bz2
Nur in ./ved: dotfiles.ved.tar.bz2
diff -r /tmp/schily-2019-08-13//ved/ved.c ./ved/ved.c
1c1
< /* @(#)ved.c	1.86 18/09/16 Copyright 1984, 85, 86, 88, 89, 97, 2000-2018 J. Schilling */
---
> /* @(#)ved.c	1.87 19/09/05 Copyright 1984, 85, 86, 88, 89, 97, 2000-2019 J. Schilling */
5c5
< 	"@(#)ved.c	1.86 18/09/16 Copyright 1984, 85, 86, 88, 89, 97, 2000-2018 J. Schilling";
---
> 	"@(#)ved.c	1.87 19/09/05 Copyright 1984, 85, 86, 88, 89, 97, 2000-2019 J. Schilling";
10c10
<  *	Copyright (c) 1984, 85, 86, 88, 89, 97, 2000-2018 J. Schilling
---
>  *	Copyright (c) 1984, 85, 86, 88, 89, 97, 2000-2019 J. Schilling
166c166
< 		printf("Copyright (C) 1984, 85, 86, 88, 89, 97, 2000-2018 Jörg Schilling\n");
---
> 		printf("Copyright (C) 1984, 85, 86, 88, 89, 97, 2000-2019 Jörg Schilling\n");
diff -r /tmp/schily-2019-08-13//ved/version.h ./ved/version.h
1c1
< /* @(#)version.h	1.2 19/01/07 Copyright 2018-2019 J. Schilling */
---
> /* @(#)version.h	1.3 19/09/05 Copyright 2018-2019 J. Schilling */
7c7
< #define	VERSION_DATE	"2019/01/07"
---
> #define	VERSION_DATE	"2019/09/05"
